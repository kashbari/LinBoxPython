// Copyright 2010,2014 LinBox. See COPYING for licence information.
/*
 * Written by:
 *        Brice Boyer (briceboyer) <boyer.brice@gmail.com>
 *
 * ========LICENCE========
 * This file is part of the library LinBox.
 *
 * LinBox is free software: you can redistribute it and/or modify
 * it under the terms of the  GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 * ========LICENCE========
 */

/**  \ingroup linbox
  * \defgroup matrix matrix
  * \brief  Matrices in LinBox
  *
  * All matrices are containers that present the blackbox interface.
  * (\sa blackbox Interface. )
  *
  * Matrices are templated by a Field and a Storage type.
  *
  * \par Dense Matrices.
  * Dense matrices can be represented in the BLAS representation (row major, row
  * and column dimension, stride).
  * The container is <code>BlasMatrix<Field,Rep></code> and the view is \c BlasSubmatrix.
  * @todo vector of rows ?
  * \sa densematrix.
  *
  * \par Sparse Matrices.
  * Sparse Matrices are reprenseted in various ways. They are
  * <code>SparseMatrix<Field,Rep></code>.
  * \sa sparsematrix.
  *
  * \par Permutation Matrix
  * \sa permuation matrix
  *
  * \par Matrix Domain.
  * The class \link LinBox::MatrixDomain MatrixDomain \endlink provides a
  * complete suite of matrix arithmetic that works transparently with any class
  * meeting the interface defined by the classes below. This includes
  * matrix-matrix addition and multiplication, matrix-vector multiplication,
  * and matrix-blackbox  multiplication.
  * \sa matrixdomain
 */



// vim:syn=doxygen
