# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (c) 2010-2011 the LinBox group
# ========LICENCE========
# This file is part of the library LinBox.
#
# LinBox is free software: you can redistribute it and/or modify
# it under the terms of the  GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# ========LICENCE========

# All tests should appear in one of the lists of this makefile (and sources given). 
# Tests not used for target "check" can be in the FULLCHECK_TESTS list.
# All tests will be processed by checker.C (target fullcheck), 
# where skips can be specified, warnings issued, package dependency handled.

#AM_CPPFLAGS=-I$(top_srcdir) -I$(top_srcdir)/linbox -I${PREFIX}/include
# AM_LDFLAGS = -llapack -lcblas -latlas
#  AM_LDFLAGS = $(top_srcdir)/linbox/.libs/liblinbox.a
#AM_LDFLAGS = $(top_srcdir)/linbox/liblinbox.la
#  SAFER_FLAGS = -g -Wall -Wextra -Wno-unused-parameter
# bds: no need to optimize for unit/regression tests, and opt adds a lot to compilation time
#AM_CXXFLAGS = @TESTS_CFLAGS@ -DLinBoxTestOnly
#  AM_CXXFLAGS = $(SAFER_FLAGS) -DLinBoxTestOnly
#AM_CXXFLAGS = $(SAFER_FLAGS) -DLinBoxTestOnly -O2
#  AM_CXXFLAGS = -g -DLinBoxTestOnly -Wall -DDEBUG -O0
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = $(am__EXEEXT_1) $(am__EXEEXT_5) $(am__EXEEXT_6)
EXTRA_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/aclocal-include.m4 \
	$(top_srcdir)/macros/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/macros/config-header.m4 \
	$(top_srcdir)/macros/debug.m4 \
	$(top_srcdir)/macros/expat-check.m4 \
	$(top_srcdir)/macros/flint-check.m4 \
	$(top_srcdir)/macros/fplll-check.m4 \
	$(top_srcdir)/macros/iml-check.m4 \
	$(top_srcdir)/macros/instr_set.m4 \
	$(top_srcdir)/macros/lapack-check.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/linbox-benchmark.m4 \
	$(top_srcdir)/macros/linbox-doc.m4 \
	$(top_srcdir)/macros/linbox-misc.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/m4ri-check.m4 \
	$(top_srcdir)/macros/m4rie-check.m4 \
	$(top_srcdir)/macros/maple-check.m4 \
	$(top_srcdir)/macros/mpfr-check.m4 \
	$(top_srcdir)/macros/ntl-check.m4 \
	$(top_srcdir)/macros/ocl-check.m4 \
	$(top_srcdir)/macros/omp-check.m4 \
	$(top_srcdir)/macros/saclib-check.m4 \
	$(top_srcdir)/macros/sage-check.m4 \
	$(top_srcdir)/macros/tinyxml2-check.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test-commentator$(EXEEXT) test-det$(EXEEXT) \
	test-frobenius$(EXEEXT) test-solve$(EXEEXT) \
	test-rational-solver$(EXEEXT) \
	test-rational-solver-adaptive$(EXEEXT) test-rank-u32$(EXEEXT) \
	test-rank-md$(EXEEXT) test-rank-Int$(EXEEXT) test-cra$(EXEEXT) \
	test-blas-matrix$(EXEEXT) test-charpoly$(EXEEXT) \
	test-isposdef$(EXEEXT) test-ispossemidef$(EXEEXT) \
	test-regression$(EXEEXT)
am__EXEEXT_2 = test-smith-form$(EXEEXT) test-ntl-lzz_p$(EXEEXT) \
	test-ntl-lzz_pe$(EXEEXT) test-ntl-lzz_px$(EXEEXT) \
	test-ntl-lzz_pex$(EXEEXT) test-ntl-zz_p$(EXEEXT) \
	test-ntl-toeplitz$(EXEEXT) test-ntl-hankel$(EXEEXT) \
	test-ntl-sylvester$(EXEEXT) \
	test-smith-form-iliopoulos$(EXEEXT) test-toeplitz-det$(EXEEXT)
am__EXEEXT_3 = test-bitonic-sort$(EXEEXT) \
	test-blackbox-block-container$(EXEEXT) \
	test-blas-domain$(EXEEXT) test-block-ring$(EXEEXT) \
	test-block-wiedemann$(EXEEXT) test-butterfly$(EXEEXT) \
	test-companion$(EXEEXT) test-cradomain$(EXEEXT) \
	test-dense$(EXEEXT) test-dense-zero-one$(EXEEXT) \
	test-diagonal$(EXEEXT) test-dif$(EXEEXT) \
	test-direct-sum$(EXEEXT) test-dyadic-to-rational$(EXEEXT) \
	test-echelon-form$(EXEEXT) test-polynomial-ring$(EXEEXT) \
	test-ffpack$(EXEEXT) test-fibb$(EXEEXT) test-ftrmm$(EXEEXT) \
	test-getentry$(EXEEXT) test-gf2$(EXEEXT) \
	test-givaropoly$(EXEEXT) test-givaro-zpz$(EXEEXT) \
	test-givaro-zpzuns$(EXEEXT) test-gmp-rational$(EXEEXT) \
	test-hilbert$(EXEEXT) test-hom$(EXEEXT) \
	test-image-field$(EXEEXT) test-inverse$(EXEEXT) \
	test-la-block-lanczos$(EXEEXT) \
	test-last-invariant-factor$(EXEEXT) test-matpoly-mult$(EXEEXT) \
	test-matrix-domain$(EXEEXT) test-matrix-stream$(EXEEXT) \
	test-mg-block-lanczos$(EXEEXT) test-minpoly$(EXEEXT) \
	test-modular$(EXEEXT) test-modular-balanced-double$(EXEEXT) \
	test-modular-balanced-float$(EXEEXT) \
	test-modular-balanced-int$(EXEEXT) test-modular-byte$(EXEEXT) \
	test-modular-double$(EXEEXT) test-modular-float$(EXEEXT) \
	test-modular-int$(EXEEXT) test-modular-short$(EXEEXT) \
	test-moore-penrose$(EXEEXT) test-ntl-hankel$(EXEEXT) \
	test-ntl-lzz_p$(EXEEXT) test-ntl-lzz_pe$(EXEEXT) \
	test-ntl-lzz_pex$(EXEEXT) test-ntl-lzz_px$(EXEEXT) \
	test-ntl-rr$(EXEEXT) test-ntl-sylvester$(EXEEXT) \
	test-ntl-toeplitz$(EXEEXT) test-ntl-zz_p$(EXEEXT) \
	test-nullspace$(EXEEXT) test-optimization$(EXEEXT) \
	test-order-basis$(EXEEXT) test-param-fuzzy$(EXEEXT) \
	test-permutation$(EXEEXT) test-plain-domain$(EXEEXT) \
	test-poly-det$(EXEEXT) test-qlup$(EXEEXT) \
	test-quad-matrix$(EXEEXT) test-randiter-nonzero$(EXEEXT) \
	test-random-matrix$(EXEEXT) test-rat-charpoly$(EXEEXT) \
	test-rational-matrix-factory$(EXEEXT) \
	test-rational-reconstruction-base$(EXEEXT) \
	test-rat-minpoly$(EXEEXT) test-rat-solve$(EXEEXT) \
	test-scalar-matrix$(EXEEXT) test-smith-form$(EXEEXT) \
	test-smith-form-adaptive$(EXEEXT) \
	test-smith-form-binary$(EXEEXT) \
	test-smith-form-iliopoulos$(EXEEXT) \
	test-smith-form-local$(EXEEXT) \
	test-smith-form-kannan-bachem$(EXEEXT) \
	test-solve-nonsingular$(EXEEXT) test-sparse$(EXEEXT) \
	test-subiterator$(EXEEXT) test-submatrix$(EXEEXT) \
	test-subvector$(EXEEXT) test-sum$(EXEEXT) \
	test-toom-cook$(EXEEXT) test-trace$(EXEEXT) \
	test-transpose$(EXEEXT) test-triplesbb$(EXEEXT) \
	test-triplesbb-omp$(EXEEXT) test-tutorial$(EXEEXT) \
	test-vector-domain$(EXEEXT) test-zero-one$(EXEEXT)
am__EXEEXT_4 = test-opencl-domain$(EXEEXT)
am_test_bitonic_sort_OBJECTS = test-bitonic-sort.$(OBJEXT)
test_bitonic_sort_OBJECTS = $(am_test_bitonic_sort_OBJECTS)
test_bitonic_sort_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
test_bitonic_sort_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_test_blackbox_block_container_OBJECTS =  \
	test-blackbox-block-container.$(OBJEXT)
test_blackbox_block_container_OBJECTS =  \
	$(am_test_blackbox_block_container_OBJECTS)
test_blackbox_block_container_LDADD = $(LDADD)
test_blackbox_block_container_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_blas_domain_OBJECTS = test-blas-domain.$(OBJEXT)
test_blas_domain_OBJECTS = $(am_test_blas_domain_OBJECTS)
test_blas_domain_LDADD = $(LDADD)
test_blas_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_blas_matrix_OBJECTS = test-blas-matrix.$(OBJEXT)
test_blas_matrix_OBJECTS = $(am_test_blas_matrix_OBJECTS)
test_blas_matrix_LDADD = $(LDADD)
test_blas_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_block_ring_OBJECTS = test-block-ring.$(OBJEXT)
test_block_ring_OBJECTS = $(am_test_block_ring_OBJECTS)
test_block_ring_LDADD = $(LDADD)
test_block_ring_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_block_wiedemann_OBJECTS = test-block-wiedemann.$(OBJEXT)
test_block_wiedemann_OBJECTS = $(am_test_block_wiedemann_OBJECTS)
test_block_wiedemann_LDADD = $(LDADD)
test_block_wiedemann_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_butterfly_OBJECTS = test-butterfly.$(OBJEXT)
test_butterfly_OBJECTS = $(am_test_butterfly_OBJECTS)
test_butterfly_LDADD = $(LDADD)
test_butterfly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_charpoly_OBJECTS = test-charpoly.$(OBJEXT)
test_charpoly_OBJECTS = $(am_test_charpoly_OBJECTS)
test_charpoly_LDADD = $(LDADD)
test_charpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_commentator_OBJECTS = test-commentator.$(OBJEXT)
test_commentator_OBJECTS = $(am_test_commentator_OBJECTS)
test_commentator_LDADD = $(LDADD)
test_commentator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_companion_OBJECTS = test-companion.$(OBJEXT)
test_companion_OBJECTS = $(am_test_companion_OBJECTS)
test_companion_LDADD = $(LDADD)
test_companion_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_cra_OBJECTS = test-cra.$(OBJEXT)
test_cra_OBJECTS = $(am_test_cra_OBJECTS)
test_cra_LDADD = $(LDADD)
test_cra_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_cradomain_OBJECTS = test-cradomain.$(OBJEXT)
test_cradomain_OBJECTS = $(am_test_cradomain_OBJECTS)
test_cradomain_LDADD = $(LDADD)
test_cradomain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_dense_OBJECTS = test-dense.$(OBJEXT)
test_dense_OBJECTS = $(am_test_dense_OBJECTS)
test_dense_LDADD = $(LDADD)
test_dense_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_dense_zero_one_OBJECTS = test-dense-zero-one.$(OBJEXT)
test_dense_zero_one_OBJECTS = $(am_test_dense_zero_one_OBJECTS)
test_dense_zero_one_LDADD = $(LDADD)
test_dense_zero_one_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_det_OBJECTS = test-det.$(OBJEXT)
test_det_OBJECTS = $(am_test_det_OBJECTS)
test_det_LDADD = $(LDADD)
test_det_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_diagonal_OBJECTS = test-diagonal.$(OBJEXT)
test_diagonal_OBJECTS = $(am_test_diagonal_OBJECTS)
test_diagonal_LDADD = $(LDADD)
test_diagonal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_dif_OBJECTS = test-dif.$(OBJEXT)
test_dif_OBJECTS = $(am_test_dif_OBJECTS)
test_dif_LDADD = $(LDADD)
test_dif_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_direct_sum_OBJECTS = test-direct-sum.$(OBJEXT)
test_direct_sum_OBJECTS = $(am_test_direct_sum_OBJECTS)
test_direct_sum_LDADD = $(LDADD)
test_direct_sum_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_dyadic_to_rational_OBJECTS =  \
	test-dyadic-to-rational.$(OBJEXT)
test_dyadic_to_rational_OBJECTS =  \
	$(am_test_dyadic_to_rational_OBJECTS)
test_dyadic_to_rational_LDADD = $(LDADD)
test_dyadic_to_rational_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_echelon_form_OBJECTS = test-echelon-form.$(OBJEXT)
test_echelon_form_OBJECTS = $(am_test_echelon_form_OBJECTS)
test_echelon_form_LDADD = $(LDADD)
test_echelon_form_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ffpack_OBJECTS = test-ffpack.$(OBJEXT)
test_ffpack_OBJECTS = $(am_test_ffpack_OBJECTS)
test_ffpack_LDADD = $(LDADD)
test_ffpack_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_fibb_OBJECTS = test-fibb.$(OBJEXT)
test_fibb_OBJECTS = $(am_test_fibb_OBJECTS)
test_fibb_LDADD = $(LDADD)
test_fibb_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_frobenius_OBJECTS = test-frobenius.$(OBJEXT)
test_frobenius_OBJECTS = $(am_test_frobenius_OBJECTS)
test_frobenius_LDADD = $(LDADD)
test_frobenius_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ftrmm_OBJECTS = test-ftrmm.$(OBJEXT)
test_ftrmm_OBJECTS = $(am_test_ftrmm_OBJECTS)
test_ftrmm_LDADD = $(LDADD)
test_ftrmm_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_getentry_OBJECTS = test-getentry.$(OBJEXT)
test_getentry_OBJECTS = $(am_test_getentry_OBJECTS)
test_getentry_LDADD = $(LDADD)
test_getentry_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_gf2_OBJECTS = test-gf2.$(OBJEXT)
test_gf2_OBJECTS = $(am_test_gf2_OBJECTS)
test_gf2_LDADD = $(LDADD)
test_gf2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_givaro_zpz_OBJECTS = test-givaro-zpz.$(OBJEXT)
test_givaro_zpz_OBJECTS = $(am_test_givaro_zpz_OBJECTS)
test_givaro_zpz_LDADD = $(LDADD)
test_givaro_zpz_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_givaro_zpzuns_OBJECTS = test-givaro-zpzuns.$(OBJEXT)
test_givaro_zpzuns_OBJECTS = $(am_test_givaro_zpzuns_OBJECTS)
test_givaro_zpzuns_LDADD = $(LDADD)
test_givaro_zpzuns_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_givaropoly_OBJECTS = test-givaropoly.$(OBJEXT)
test_givaropoly_OBJECTS = $(am_test_givaropoly_OBJECTS)
test_givaropoly_LDADD = $(LDADD)
test_givaropoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_gmp_rational_OBJECTS = test-gmp-rational.$(OBJEXT)
test_gmp_rational_OBJECTS = $(am_test_gmp_rational_OBJECTS)
test_gmp_rational_LDADD = $(LDADD)
test_gmp_rational_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_hilbert_OBJECTS = test-hilbert.$(OBJEXT)
test_hilbert_OBJECTS = $(am_test_hilbert_OBJECTS)
test_hilbert_LDADD = $(LDADD)
test_hilbert_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_hom_OBJECTS = test-hom.$(OBJEXT)
test_hom_OBJECTS = $(am_test_hom_OBJECTS)
test_hom_LDADD = $(LDADD)
test_hom_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_image_field_OBJECTS = test-image-field.$(OBJEXT)
test_image_field_OBJECTS = $(am_test_image_field_OBJECTS)
test_image_field_LDADD = $(LDADD)
test_image_field_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_inverse_OBJECTS = test-inverse.$(OBJEXT)
test_inverse_OBJECTS = $(am_test_inverse_OBJECTS)
test_inverse_LDADD = $(LDADD)
test_inverse_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_isposdef_OBJECTS = test-isposdef.$(OBJEXT)
test_isposdef_OBJECTS = $(am_test_isposdef_OBJECTS)
test_isposdef_LDADD = $(LDADD)
test_isposdef_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ispossemidef_OBJECTS = test-ispossemidef.$(OBJEXT)
test_ispossemidef_OBJECTS = $(am_test_ispossemidef_OBJECTS)
test_ispossemidef_LDADD = $(LDADD)
test_ispossemidef_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_la_block_lanczos_OBJECTS = test-la-block-lanczos.$(OBJEXT)
test_la_block_lanczos_OBJECTS = $(am_test_la_block_lanczos_OBJECTS)
test_la_block_lanczos_LDADD = $(LDADD)
test_la_block_lanczos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_last_invariant_factor_OBJECTS =  \
	test-last-invariant-factor.$(OBJEXT)
test_last_invariant_factor_OBJECTS =  \
	$(am_test_last_invariant_factor_OBJECTS)
test_last_invariant_factor_LDADD = $(LDADD)
test_last_invariant_factor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_matpoly_mult_OBJECTS = test-matpoly-mult.$(OBJEXT)
test_matpoly_mult_OBJECTS = $(am_test_matpoly_mult_OBJECTS)
test_matpoly_mult_LDADD = $(LDADD)
test_matpoly_mult_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_matrix_domain_OBJECTS = test-matrix-domain.$(OBJEXT)
test_matrix_domain_OBJECTS = $(am_test_matrix_domain_OBJECTS)
test_matrix_domain_LDADD = $(LDADD)
test_matrix_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_matrix_stream_OBJECTS = test-matrix-stream.$(OBJEXT)
test_matrix_stream_OBJECTS = $(am_test_matrix_stream_OBJECTS)
test_matrix_stream_LDADD = $(LDADD)
test_matrix_stream_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_mg_block_lanczos_OBJECTS = test-mg-block-lanczos.$(OBJEXT)
test_mg_block_lanczos_OBJECTS = $(am_test_mg_block_lanczos_OBJECTS)
test_mg_block_lanczos_LDADD = $(LDADD)
test_mg_block_lanczos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_minpoly_OBJECTS = test-minpoly.$(OBJEXT)
test_minpoly_OBJECTS = $(am_test_minpoly_OBJECTS)
test_minpoly_LDADD = $(LDADD)
test_minpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_OBJECTS = test-modular.$(OBJEXT)
test_modular_OBJECTS = $(am_test_modular_OBJECTS)
test_modular_LDADD = $(LDADD)
test_modular_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_balanced_double_OBJECTS =  \
	test-modular-balanced-double.$(OBJEXT)
test_modular_balanced_double_OBJECTS =  \
	$(am_test_modular_balanced_double_OBJECTS)
test_modular_balanced_double_LDADD = $(LDADD)
test_modular_balanced_double_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_balanced_float_OBJECTS =  \
	test-modular-balanced-float.$(OBJEXT)
test_modular_balanced_float_OBJECTS =  \
	$(am_test_modular_balanced_float_OBJECTS)
test_modular_balanced_float_LDADD = $(LDADD)
test_modular_balanced_float_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_balanced_int_OBJECTS =  \
	test-modular-balanced-int.$(OBJEXT)
test_modular_balanced_int_OBJECTS =  \
	$(am_test_modular_balanced_int_OBJECTS)
test_modular_balanced_int_LDADD = $(LDADD)
test_modular_balanced_int_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_byte_OBJECTS = test-modular-byte.$(OBJEXT)
test_modular_byte_OBJECTS = $(am_test_modular_byte_OBJECTS)
test_modular_byte_LDADD = $(LDADD)
test_modular_byte_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_double_OBJECTS = test-modular-double.$(OBJEXT)
test_modular_double_OBJECTS = $(am_test_modular_double_OBJECTS)
test_modular_double_LDADD = $(LDADD)
test_modular_double_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_float_OBJECTS = test-modular-float.$(OBJEXT)
test_modular_float_OBJECTS = $(am_test_modular_float_OBJECTS)
test_modular_float_LDADD = $(LDADD)
test_modular_float_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_int_OBJECTS = test-modular-int.$(OBJEXT)
test_modular_int_OBJECTS = $(am_test_modular_int_OBJECTS)
test_modular_int_LDADD = $(LDADD)
test_modular_int_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_modular_short_OBJECTS = test-modular-short.$(OBJEXT)
test_modular_short_OBJECTS = $(am_test_modular_short_OBJECTS)
test_modular_short_LDADD = $(LDADD)
test_modular_short_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_moore_penrose_OBJECTS = test-moore-penrose.$(OBJEXT)
test_moore_penrose_OBJECTS = $(am_test_moore_penrose_OBJECTS)
test_moore_penrose_LDADD = $(LDADD)
test_moore_penrose_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_hankel_OBJECTS = test-ntl-hankel.$(OBJEXT)
test_ntl_hankel_OBJECTS = $(am_test_ntl_hankel_OBJECTS)
test_ntl_hankel_LDADD = $(LDADD)
test_ntl_hankel_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_lzz_p_OBJECTS = test-ntl-lzz_p.$(OBJEXT)
test_ntl_lzz_p_OBJECTS = $(am_test_ntl_lzz_p_OBJECTS)
test_ntl_lzz_p_LDADD = $(LDADD)
test_ntl_lzz_p_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_lzz_pe_OBJECTS = test-ntl-lzz_pe.$(OBJEXT)
test_ntl_lzz_pe_OBJECTS = $(am_test_ntl_lzz_pe_OBJECTS)
test_ntl_lzz_pe_LDADD = $(LDADD)
test_ntl_lzz_pe_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_lzz_pex_OBJECTS = test-ntl-lzz_pex.$(OBJEXT)
test_ntl_lzz_pex_OBJECTS = $(am_test_ntl_lzz_pex_OBJECTS)
test_ntl_lzz_pex_LDADD = $(LDADD)
test_ntl_lzz_pex_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_lzz_px_OBJECTS = test-ntl-lzz_px.$(OBJEXT)
test_ntl_lzz_px_OBJECTS = $(am_test_ntl_lzz_px_OBJECTS)
test_ntl_lzz_px_LDADD = $(LDADD)
test_ntl_lzz_px_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_rr_OBJECTS = test-ntl-rr.$(OBJEXT)
test_ntl_rr_OBJECTS = $(am_test_ntl_rr_OBJECTS)
test_ntl_rr_LDADD = $(LDADD)
test_ntl_rr_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ntl_sylvester_OBJECTS = test-ntl-sylvester.$(OBJEXT)
test_ntl_sylvester_OBJECTS = $(am_test_ntl_sylvester_OBJECTS)
test_ntl_sylvester_LDADD = $(LDADD)
test_ntl_sylvester_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_toeplitz_OBJECTS = test-ntl-toeplitz.$(OBJEXT)
test_ntl_toeplitz_OBJECTS = $(am_test_ntl_toeplitz_OBJECTS)
test_ntl_toeplitz_LDADD = $(LDADD)
test_ntl_toeplitz_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_zz_p_OBJECTS = test-ntl-zz_p.$(OBJEXT)
test_ntl_zz_p_OBJECTS = $(am_test_ntl_zz_p_OBJECTS)
test_ntl_zz_p_LDADD = $(LDADD)
test_ntl_zz_p_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_nullspace_OBJECTS = test-nullspace.$(OBJEXT)
test_nullspace_OBJECTS = $(am_test_nullspace_OBJECTS)
test_nullspace_LDADD = $(LDADD)
test_nullspace_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_opencl_domain_OBJECTS = test-opencl-domain.$(OBJEXT)
test_opencl_domain_OBJECTS = $(am_test_opencl_domain_OBJECTS)
test_opencl_domain_LDADD = $(LDADD)
test_opencl_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_optimization_OBJECTS = test-optimization.$(OBJEXT)
test_optimization_OBJECTS = $(am_test_optimization_OBJECTS)
test_optimization_LDADD = $(LDADD)
test_optimization_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_order_basis_OBJECTS = test-order-basis.$(OBJEXT)
test_order_basis_OBJECTS = $(am_test_order_basis_OBJECTS)
test_order_basis_LDADD = $(LDADD)
test_order_basis_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_param_fuzzy_OBJECTS = test-param-fuzzy.$(OBJEXT)
test_param_fuzzy_OBJECTS = $(am_test_param_fuzzy_OBJECTS)
test_param_fuzzy_LDADD = $(LDADD)
test_param_fuzzy_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_permutation_OBJECTS = test-permutation.$(OBJEXT)
test_permutation_OBJECTS = $(am_test_permutation_OBJECTS)
test_permutation_LDADD = $(LDADD)
test_permutation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_plain_domain_OBJECTS = test-plain-domain.$(OBJEXT)
test_plain_domain_OBJECTS = $(am_test_plain_domain_OBJECTS)
test_plain_domain_LDADD = $(LDADD)
test_plain_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_poly_det_OBJECTS = test-poly-det.$(OBJEXT)
test_poly_det_OBJECTS = $(am_test_poly_det_OBJECTS)
test_poly_det_LDADD = $(LDADD)
test_poly_det_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_polynomial_ring_OBJECTS = test-polynomial-ring.$(OBJEXT)
test_polynomial_ring_OBJECTS = $(am_test_polynomial_ring_OBJECTS)
test_polynomial_ring_LDADD = $(LDADD)
test_polynomial_ring_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_qlup_OBJECTS = test-qlup.$(OBJEXT)
test_qlup_OBJECTS = $(am_test_qlup_OBJECTS)
test_qlup_LDADD = $(LDADD)
test_qlup_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_quad_matrix_OBJECTS = test-quad-matrix.$(OBJEXT)
test_quad_matrix_OBJECTS = $(am_test_quad_matrix_OBJECTS)
test_quad_matrix_LDADD = $(LDADD)
test_quad_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_randiter_nonzero_OBJECTS = test-randiter-nonzero.$(OBJEXT)
test_randiter_nonzero_OBJECTS = $(am_test_randiter_nonzero_OBJECTS)
test_randiter_nonzero_LDADD = $(LDADD)
test_randiter_nonzero_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_random_matrix_OBJECTS = test-random-matrix.$(OBJEXT)
test_random_matrix_OBJECTS = $(am_test_random_matrix_OBJECTS)
test_random_matrix_LDADD = $(LDADD)
test_random_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rank_Int_OBJECTS = test-rank-Int.$(OBJEXT)
test_rank_Int_OBJECTS = $(am_test_rank_Int_OBJECTS)
test_rank_Int_LDADD = $(LDADD)
test_rank_Int_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rank_md_OBJECTS = test-rank-md.$(OBJEXT)
test_rank_md_OBJECTS = $(am_test_rank_md_OBJECTS)
test_rank_md_LDADD = $(LDADD)
test_rank_md_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rank_u32_OBJECTS = test-rank-u32.$(OBJEXT)
test_rank_u32_OBJECTS = $(am_test_rank_u32_OBJECTS)
test_rank_u32_LDADD = $(LDADD)
test_rank_u32_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rat_charpoly_OBJECTS = test-rat-charpoly.$(OBJEXT)
test_rat_charpoly_OBJECTS = $(am_test_rat_charpoly_OBJECTS)
test_rat_charpoly_LDADD = $(LDADD)
test_rat_charpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rat_minpoly_OBJECTS = test-rat-minpoly.$(OBJEXT)
test_rat_minpoly_OBJECTS = $(am_test_rat_minpoly_OBJECTS)
test_rat_minpoly_LDADD = $(LDADD)
test_rat_minpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rat_solve_OBJECTS = test-rat-solve.$(OBJEXT)
test_rat_solve_OBJECTS = $(am_test_rat_solve_OBJECTS)
test_rat_solve_LDADD = $(LDADD)
test_rat_solve_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rational_matrix_factory_OBJECTS =  \
	test-rational-matrix-factory.$(OBJEXT)
test_rational_matrix_factory_OBJECTS =  \
	$(am_test_rational_matrix_factory_OBJECTS)
test_rational_matrix_factory_LDADD = $(LDADD)
test_rational_matrix_factory_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rational_reconstruction_base_OBJECTS =  \
	test-rational-reconstruction-base.$(OBJEXT)
test_rational_reconstruction_base_OBJECTS =  \
	$(am_test_rational_reconstruction_base_OBJECTS)
test_rational_reconstruction_base_LDADD = $(LDADD)
test_rational_reconstruction_base_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rational_solver_OBJECTS = test-rational-solver.$(OBJEXT)
test_rational_solver_OBJECTS = $(am_test_rational_solver_OBJECTS)
test_rational_solver_LDADD = $(LDADD)
test_rational_solver_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rational_solver_adaptive_OBJECTS =  \
	test-rational-solver-adaptive.$(OBJEXT)
test_rational_solver_adaptive_OBJECTS =  \
	$(am_test_rational_solver_adaptive_OBJECTS)
test_rational_solver_adaptive_LDADD = $(LDADD)
test_rational_solver_adaptive_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_regression_OBJECTS = test-regression.$(OBJEXT)
test_regression_OBJECTS = $(am_test_regression_OBJECTS)
test_regression_LDADD = $(LDADD)
test_regression_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_scalar_matrix_OBJECTS = test-scalar-matrix.$(OBJEXT)
test_scalar_matrix_OBJECTS = $(am_test_scalar_matrix_OBJECTS)
test_scalar_matrix_LDADD = $(LDADD)
test_scalar_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_smith_form_OBJECTS = test-smith-form.$(OBJEXT)
test_smith_form_OBJECTS = $(am_test_smith_form_OBJECTS)
test_smith_form_LDADD = $(LDADD)
test_smith_form_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_smith_form_adaptive_OBJECTS =  \
	test-smith-form-adaptive.$(OBJEXT)
test_smith_form_adaptive_OBJECTS =  \
	$(am_test_smith_form_adaptive_OBJECTS)
test_smith_form_adaptive_LDADD = $(LDADD)
test_smith_form_adaptive_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_smith_form_binary_OBJECTS = test-smith-form-binary.$(OBJEXT)
test_smith_form_binary_OBJECTS = $(am_test_smith_form_binary_OBJECTS)
test_smith_form_binary_LDADD = $(LDADD)
test_smith_form_binary_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_smith_form_iliopoulos_OBJECTS =  \
	test-smith-form-iliopoulos.$(OBJEXT)
test_smith_form_iliopoulos_OBJECTS =  \
	$(am_test_smith_form_iliopoulos_OBJECTS)
test_smith_form_iliopoulos_LDADD = $(LDADD)
test_smith_form_iliopoulos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_smith_form_kannan_bachem_OBJECTS =  \
	test-smith-form-kannan-bachem.$(OBJEXT)
test_smith_form_kannan_bachem_OBJECTS =  \
	$(am_test_smith_form_kannan_bachem_OBJECTS)
test_smith_form_kannan_bachem_LDADD = $(LDADD)
test_smith_form_kannan_bachem_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_smith_form_local_OBJECTS = test-smith-form-local.$(OBJEXT)
test_smith_form_local_OBJECTS = $(am_test_smith_form_local_OBJECTS)
test_smith_form_local_LDADD = $(LDADD)
test_smith_form_local_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_solve_OBJECTS = test-solve.$(OBJEXT)
test_solve_OBJECTS = $(am_test_solve_OBJECTS)
test_solve_LDADD = $(LDADD)
test_solve_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_solve_nonsingular_OBJECTS = test-solve-nonsingular.$(OBJEXT)
test_solve_nonsingular_OBJECTS = $(am_test_solve_nonsingular_OBJECTS)
test_solve_nonsingular_LDADD = $(LDADD)
test_solve_nonsingular_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_sparse_OBJECTS = test-sparse.$(OBJEXT)
test_sparse_OBJECTS = $(am_test_sparse_OBJECTS)
test_sparse_LDADD = $(LDADD)
test_sparse_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_subiterator_OBJECTS = test-subiterator.$(OBJEXT)
test_subiterator_OBJECTS = $(am_test_subiterator_OBJECTS)
test_subiterator_LDADD = $(LDADD)
test_subiterator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_submatrix_OBJECTS = test-submatrix.$(OBJEXT)
test_submatrix_OBJECTS = $(am_test_submatrix_OBJECTS)
test_submatrix_LDADD = $(LDADD)
test_submatrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_subvector_OBJECTS = test-subvector.$(OBJEXT)
test_subvector_OBJECTS = $(am_test_subvector_OBJECTS)
test_subvector_LDADD = $(LDADD)
test_subvector_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_sum_OBJECTS = test-sum.$(OBJEXT)
test_sum_OBJECTS = $(am_test_sum_OBJECTS)
test_sum_LDADD = $(LDADD)
test_sum_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_toeplitz_det_OBJECTS = test-toeplitz-det.$(OBJEXT)
test_toeplitz_det_OBJECTS = $(am_test_toeplitz_det_OBJECTS)
test_toeplitz_det_LDADD = $(LDADD)
test_toeplitz_det_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_toom_cook_OBJECTS = test-toom-cook.$(OBJEXT)
test_toom_cook_OBJECTS = $(am_test_toom_cook_OBJECTS)
test_toom_cook_LDADD = $(LDADD)
test_toom_cook_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_trace_OBJECTS = test-trace.$(OBJEXT)
test_trace_OBJECTS = $(am_test_trace_OBJECTS)
test_trace_LDADD = $(LDADD)
test_trace_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_transpose_OBJECTS = test-transpose.$(OBJEXT)
test_transpose_OBJECTS = $(am_test_transpose_OBJECTS)
test_transpose_LDADD = $(LDADD)
test_transpose_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_triplesbb_OBJECTS = test-triplesbb.$(OBJEXT)
test_triplesbb_OBJECTS = $(am_test_triplesbb_OBJECTS)
test_triplesbb_LDADD = $(LDADD)
test_triplesbb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_triplesbb_omp_OBJECTS = test-triplesbb-omp.$(OBJEXT)
test_triplesbb_omp_OBJECTS = $(am_test_triplesbb_omp_OBJECTS)
test_triplesbb_omp_LDADD = $(LDADD)
test_triplesbb_omp_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_tutorial_OBJECTS = test-tutorial.$(OBJEXT)
test_tutorial_OBJECTS = $(am_test_tutorial_OBJECTS)
test_tutorial_LDADD = $(LDADD)
test_tutorial_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_vector_domain_OBJECTS = test-vector-domain.$(OBJEXT)
test_vector_domain_OBJECTS = $(am_test_vector_domain_OBJECTS)
test_vector_domain_LDADD = $(LDADD)
test_vector_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_zero_one_OBJECTS = test-zero-one.$(OBJEXT)
test_zero_one_OBJECTS = $(am_test_zero_one_OBJECTS)
test_zero_one_LDADD = $(LDADD)
test_zero_one_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(test_bitonic_sort_SOURCES) \
	$(test_blackbox_block_container_SOURCES) \
	$(test_blas_domain_SOURCES) $(test_blas_matrix_SOURCES) \
	$(test_block_ring_SOURCES) $(test_block_wiedemann_SOURCES) \
	$(test_butterfly_SOURCES) $(test_charpoly_SOURCES) \
	$(test_commentator_SOURCES) $(test_companion_SOURCES) \
	$(test_cra_SOURCES) $(test_cradomain_SOURCES) \
	$(test_dense_SOURCES) $(test_dense_zero_one_SOURCES) \
	$(test_det_SOURCES) $(test_diagonal_SOURCES) \
	$(test_dif_SOURCES) $(test_direct_sum_SOURCES) \
	$(test_dyadic_to_rational_SOURCES) \
	$(test_echelon_form_SOURCES) $(test_ffpack_SOURCES) \
	$(test_fibb_SOURCES) $(test_frobenius_SOURCES) \
	$(test_ftrmm_SOURCES) $(test_getentry_SOURCES) \
	$(test_gf2_SOURCES) $(test_givaro_zpz_SOURCES) \
	$(test_givaro_zpzuns_SOURCES) $(test_givaropoly_SOURCES) \
	$(test_gmp_rational_SOURCES) $(test_hilbert_SOURCES) \
	$(test_hom_SOURCES) $(test_image_field_SOURCES) \
	$(test_inverse_SOURCES) $(test_isposdef_SOURCES) \
	$(test_ispossemidef_SOURCES) $(test_la_block_lanczos_SOURCES) \
	$(test_last_invariant_factor_SOURCES) \
	$(test_matpoly_mult_SOURCES) $(test_matrix_domain_SOURCES) \
	$(test_matrix_stream_SOURCES) $(test_mg_block_lanczos_SOURCES) \
	$(test_minpoly_SOURCES) $(test_modular_SOURCES) \
	$(test_modular_balanced_double_SOURCES) \
	$(test_modular_balanced_float_SOURCES) \
	$(test_modular_balanced_int_SOURCES) \
	$(test_modular_byte_SOURCES) $(test_modular_double_SOURCES) \
	$(test_modular_float_SOURCES) $(test_modular_int_SOURCES) \
	$(test_modular_short_SOURCES) $(test_moore_penrose_SOURCES) \
	$(test_ntl_hankel_SOURCES) $(test_ntl_lzz_p_SOURCES) \
	$(test_ntl_lzz_pe_SOURCES) $(test_ntl_lzz_pex_SOURCES) \
	$(test_ntl_lzz_px_SOURCES) $(test_ntl_rr_SOURCES) \
	$(test_ntl_sylvester_SOURCES) $(test_ntl_toeplitz_SOURCES) \
	$(test_ntl_zz_p_SOURCES) $(test_nullspace_SOURCES) \
	$(test_opencl_domain_SOURCES) $(test_optimization_SOURCES) \
	$(test_order_basis_SOURCES) $(test_param_fuzzy_SOURCES) \
	$(test_permutation_SOURCES) $(test_plain_domain_SOURCES) \
	$(test_poly_det_SOURCES) $(test_polynomial_ring_SOURCES) \
	$(test_qlup_SOURCES) $(test_quad_matrix_SOURCES) \
	$(test_randiter_nonzero_SOURCES) $(test_random_matrix_SOURCES) \
	$(test_rank_Int_SOURCES) $(test_rank_md_SOURCES) \
	$(test_rank_u32_SOURCES) $(test_rat_charpoly_SOURCES) \
	$(test_rat_minpoly_SOURCES) $(test_rat_solve_SOURCES) \
	$(test_rational_matrix_factory_SOURCES) \
	$(test_rational_reconstruction_base_SOURCES) \
	$(test_rational_solver_SOURCES) \
	$(test_rational_solver_adaptive_SOURCES) \
	$(test_regression_SOURCES) $(test_scalar_matrix_SOURCES) \
	$(test_smith_form_SOURCES) $(test_smith_form_adaptive_SOURCES) \
	$(test_smith_form_binary_SOURCES) \
	$(test_smith_form_iliopoulos_SOURCES) \
	$(test_smith_form_kannan_bachem_SOURCES) \
	$(test_smith_form_local_SOURCES) $(test_solve_SOURCES) \
	$(test_solve_nonsingular_SOURCES) $(test_sparse_SOURCES) \
	$(test_subiterator_SOURCES) $(test_submatrix_SOURCES) \
	$(test_subvector_SOURCES) $(test_sum_SOURCES) \
	$(test_toeplitz_det_SOURCES) $(test_toom_cook_SOURCES) \
	$(test_trace_SOURCES) $(test_transpose_SOURCES) \
	$(test_triplesbb_SOURCES) $(test_triplesbb_omp_SOURCES) \
	$(test_tutorial_SOURCES) $(test_vector_domain_SOURCES) \
	$(test_zero_one_SOURCES)
DIST_SOURCES = $(test_bitonic_sort_SOURCES) \
	$(test_blackbox_block_container_SOURCES) \
	$(test_blas_domain_SOURCES) $(test_blas_matrix_SOURCES) \
	$(test_block_ring_SOURCES) $(test_block_wiedemann_SOURCES) \
	$(test_butterfly_SOURCES) $(test_charpoly_SOURCES) \
	$(test_commentator_SOURCES) $(test_companion_SOURCES) \
	$(test_cra_SOURCES) $(test_cradomain_SOURCES) \
	$(test_dense_SOURCES) $(test_dense_zero_one_SOURCES) \
	$(test_det_SOURCES) $(test_diagonal_SOURCES) \
	$(test_dif_SOURCES) $(test_direct_sum_SOURCES) \
	$(test_dyadic_to_rational_SOURCES) \
	$(test_echelon_form_SOURCES) $(test_ffpack_SOURCES) \
	$(test_fibb_SOURCES) $(test_frobenius_SOURCES) \
	$(test_ftrmm_SOURCES) $(test_getentry_SOURCES) \
	$(test_gf2_SOURCES) $(test_givaro_zpz_SOURCES) \
	$(test_givaro_zpzuns_SOURCES) $(test_givaropoly_SOURCES) \
	$(test_gmp_rational_SOURCES) $(test_hilbert_SOURCES) \
	$(test_hom_SOURCES) $(test_image_field_SOURCES) \
	$(test_inverse_SOURCES) $(test_isposdef_SOURCES) \
	$(test_ispossemidef_SOURCES) $(test_la_block_lanczos_SOURCES) \
	$(test_last_invariant_factor_SOURCES) \
	$(test_matpoly_mult_SOURCES) $(test_matrix_domain_SOURCES) \
	$(test_matrix_stream_SOURCES) $(test_mg_block_lanczos_SOURCES) \
	$(test_minpoly_SOURCES) $(test_modular_SOURCES) \
	$(test_modular_balanced_double_SOURCES) \
	$(test_modular_balanced_float_SOURCES) \
	$(test_modular_balanced_int_SOURCES) \
	$(test_modular_byte_SOURCES) $(test_modular_double_SOURCES) \
	$(test_modular_float_SOURCES) $(test_modular_int_SOURCES) \
	$(test_modular_short_SOURCES) $(test_moore_penrose_SOURCES) \
	$(test_ntl_hankel_SOURCES) $(test_ntl_lzz_p_SOURCES) \
	$(test_ntl_lzz_pe_SOURCES) $(test_ntl_lzz_pex_SOURCES) \
	$(test_ntl_lzz_px_SOURCES) $(test_ntl_rr_SOURCES) \
	$(test_ntl_sylvester_SOURCES) $(test_ntl_toeplitz_SOURCES) \
	$(test_ntl_zz_p_SOURCES) $(test_nullspace_SOURCES) \
	$(test_opencl_domain_SOURCES) $(test_optimization_SOURCES) \
	$(test_order_basis_SOURCES) $(test_param_fuzzy_SOURCES) \
	$(test_permutation_SOURCES) $(test_plain_domain_SOURCES) \
	$(test_poly_det_SOURCES) $(test_polynomial_ring_SOURCES) \
	$(test_qlup_SOURCES) $(test_quad_matrix_SOURCES) \
	$(test_randiter_nonzero_SOURCES) $(test_random_matrix_SOURCES) \
	$(test_rank_Int_SOURCES) $(test_rank_md_SOURCES) \
	$(test_rank_u32_SOURCES) $(test_rat_charpoly_SOURCES) \
	$(test_rat_minpoly_SOURCES) $(test_rat_solve_SOURCES) \
	$(test_rational_matrix_factory_SOURCES) \
	$(test_rational_reconstruction_base_SOURCES) \
	$(test_rational_solver_SOURCES) \
	$(test_rational_solver_adaptive_SOURCES) \
	$(test_regression_SOURCES) $(test_scalar_matrix_SOURCES) \
	$(test_smith_form_SOURCES) $(test_smith_form_adaptive_SOURCES) \
	$(test_smith_form_binary_SOURCES) \
	$(test_smith_form_iliopoulos_SOURCES) \
	$(test_smith_form_kannan_bachem_SOURCES) \
	$(test_smith_form_local_SOURCES) $(test_solve_SOURCES) \
	$(test_solve_nonsingular_SOURCES) $(test_sparse_SOURCES) \
	$(test_subiterator_SOURCES) $(test_submatrix_SOURCES) \
	$(test_subvector_SOURCES) $(test_sum_SOURCES) \
	$(test_toeplitz_det_SOURCES) $(test_toom_cook_SOURCES) \
	$(test_trace_SOURCES) $(test_transpose_SOURCES) \
	$(test_triplesbb_SOURCES) $(test_triplesbb_omp_SOURCES) \
	$(test_tutorial_SOURCES) $(test_vector_domain_SOURCES) \
	$(test_zero_one_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
@LINBOX_HAVE_NTL_TRUE@am__EXEEXT_5 = test-ntl-lzz_pex$(EXEEXT) \
@LINBOX_HAVE_NTL_TRUE@	test-toeplitz-det$(EXEEXT)
@LINBOX_HAVE_OCL_TRUE@am__EXEEXT_6 = $(am__EXEEXT_4)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver TODO
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCNAM = @CCNAM@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBG = @DBG@
DEBUG_CFLAGS = @DEBUG_CFLAGS@
DEFAULT_CFLAGS = @DEFAULT_CFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEPS_CFLAGS = @DEPS_CFLAGS@
DEPS_LIBS = @DEPS_LIBS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPAT_CFLAGS = @EXPAT_CFLAGS@
EXPAT_LIBS = @EXPAT_LIBS@
FFLAS_FFPACK_CFLAGS = @FFLAS_FFPACK_CFLAGS@
FFLAS_FFPACK_LIBS = @FFLAS_FFPACK_LIBS@
FGREP = @FGREP@
FLINT_CFLAGS = @FLINT_CFLAGS@
FLINT_LIBS = @FLINT_LIBS@
FPLLL_CFLAGS = @FPLLL_CFLAGS@
FPLLL_LIBS = @FPLLL_LIBS@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
IML_CFLAGS = @IML_CFLAGS@
IML_LIBS = @IML_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LINBOXSAGE_LIBS = @LINBOXSAGE_LIBS@
LINBOX_BENCH_PATH = @LINBOX_BENCH_PATH@
LINBOX_DOC_PATH = @LINBOX_DOC_PATH@
LINBOX_LDFLAGS = @LINBOX_LDFLAGS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4RIE_CFLAGS = @M4RIE_CFLAGS@
M4RIE_LIBS = @M4RIE_LIBS@
M4RI_CFLAGS = @M4RI_CFLAGS@
M4RI_LIBS = @M4RI_LIBS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_CFLAGS = @MAPLE_CFLAGS@
MAPLE_HOME = @MAPLE_HOME@
MAPLE_LIBS = @MAPLE_LIBS@
MAPLE_VERSION = @MAPLE_VERSION@
MKDIR_P = @MKDIR_P@
MPFR_CFLAGS = @MPFR_CFLAGS@
MPFR_LIBS = @MPFR_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NTL_CFLAGS = @NTL_CFLAGS@
NTL_LIBS = @NTL_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCL_CFLAGS = @OCL_CFLAGS@
OCL_LIBS = @OCL_LIBS@
OMPFLAGS = @OMPFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARFLAGS = @PARFLAGS@
PARLIBS = @PARLIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PROF = @PROF@
RANLIB = @RANLIB@
SACLIB_CFLAGS = @SACLIB_CFLAGS@
SACLIB_LIBS = @SACLIB_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIMD_FLAGS = @SIMD_FLAGS@
STRIP = @STRIP@
TESTS_CFLAGS = @TESTS_CFLAGS@
VERSION = @VERSION@
WARN = @WARN@
XML_LIBS = @XML_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -DLinBoxTestOnly $(TESTS_CFLAGS) $(DEBUG_CFLAGS) \
	-I$(top_srcdir) $(DEPS_CFLAGS)

# AM_CXXFLAGS = -g -DLinBoxTestOnly -Wall -D__LINBOX_HAVE_DGETRF -D__LINBOX_HAVE_DGETRI
# AM_CFLAGS = -g -Wall
SUBDIRS = data matrix
LDADD = $(DEPS_LIBS) $(LDFLAGS)
AM_LDFLAGS = $(top_builddir)/linbox/liblinbox.la
#  AM_LDFLAGS+=-static -Wl,-rpath -Wl,
EXTRA_DIST = \
		test-blackbox.h			\
		test-common.h			\
		test-common.inl			\
		test-field.h			\
		test-generic.h			\
		test-matrix-utils.h		\
		test-matrix-domain.h	\
		test-rank.h				\
		test-vector-domain.h	\
		tests.doxy				\
		checker.C				

PERFPUBLISHERFILE = tests-report.xml

#  tutorial-1: tutorial-1.C

#  test-tutorial$(EXEEXT): test-tutorial.C tutorial-1

# Put an entry for your test-mycomponent.C in one of the test groups.
# Don't forget to add a test_mycomponent_SOURCES entry below.
#
# Once present, tests should remain present, being moved from one group to another.
BASIC_TESTS = \
	test-commentator			\
	test-det					\
	test-frobenius              \
	test-solve                  \
	test-rational-solver        \
	test-rational-solver-adaptive \
	test-rank-u32				\
	test-rank-md				\
	test-rank-Int				\
	test-cra					\
	test-blas-matrix			\
	test-charpoly			\
	test-isposdef				\
	test-ispossemidef			\
	test-regression


# All other tests.  
# The checker.C determines which of these are built and run in "make fullcheck".
FULLCHECK_TESTS = \
	test-bitonic-sort           \
	test-blackbox-block-container \
	test-blas-domain            \
	test-block-ring				\
	test-block-wiedemann		\
	test-butterfly				\
	test-companion				\
	test-cradomain				\
	test-dense					\
	test-dense-zero-one      	\
	test-diagonal				\
	test-dif					\
	test-direct-sum				\
	test-dyadic-to-rational  	\
	test-echelon-form			\
	test-polynomial-ring		\
	test-ffpack					\
	test-fibb					\
	test-ftrmm					\
	test-getentry				\
	test-gf2					\
	test-givaropoly				\
	test-givaro-zpz				\
	test-givaro-zpzuns				\
	test-gmp-rational			\
	test-hilbert				\
	test-hom					\
	test-image-field			\
	test-inverse				\
	test-la-block-lanczos		\
	test-last-invariant-factor  \
	test-matpoly-mult			\
	test-matrix-domain			\
	test-matrix-stream			\
	test-mg-block-lanczos    	\
	test-minpoly				\
	test-modular				\
	test-modular-balanced-double \
	test-modular-balanced-float  \
	test-modular-balanced-int   \
	test-modular-byte			\
	test-modular-double			\
	test-modular-float			\
	test-modular-int			\
	test-modular-short			\
	test-moore-penrose			\
	test-ntl-hankel             \
	test-ntl-lzz_p              \
	test-ntl-lzz_pe             \
	test-ntl-lzz_pex            \
	test-ntl-lzz_px             \
	test-ntl-rr					\
	test-ntl-sylvester          \
	test-ntl-toeplitz           \
	test-ntl-zz_p               \
	test-nullspace				\
	test-optimization			\
	test-order-basis			\
	test-param-fuzzy			\
	test-permutation			\
	test-plain-domain			\
	test-poly-det				\
	test-qlup					\
	test-quad-matrix			\
	test-randiter-nonzero		\
	test-random-matrix			\
	test-rat-charpoly			\
	test-rational-matrix-factory \
	test-rational-reconstruction-base \
	test-rat-minpoly			\
	test-rat-solve				\
	test-scalar-matrix			\
	test-smith-form             \
	test-smith-form-adaptive 	\
	test-smith-form-binary      \
	test-smith-form-iliopoulos  \
	test-smith-form-local    	\
	test-smith-form-kannan-bachem	\
	test-solve-nonsingular		\
	test-sparse					\
	test-subiterator			\
	test-submatrix				\
	test-subvector				\
	test-sum					\
	test-toom-cook				\
	test-trace					\
	test-transpose				\
	test-triplesbb				\
	test-triplesbb-omp			\
	test-tutorial				\
	test-vector-domain			\
	test-zero-one				


# Really just one or two of these would be enough for target check.
# The rest can be in target fullcheck.
NTL_TESTS = \
	test-smith-form             \
	test-ntl-lzz_p              \
	test-ntl-lzz_pe             \
	test-ntl-lzz_px             \
	test-ntl-lzz_pex            \
	test-ntl-zz_p               \
	test-ntl-toeplitz           \
	test-ntl-hankel             \
	test-ntl-sylvester          \
	test-smith-form-iliopoulos  \
	test-toeplitz-det					


#USE_NTL_TESTS = $(NTL_TESTS)
@LINBOX_HAVE_NTL_TRUE@USE_NTL_TESTS = \
@LINBOX_HAVE_NTL_TRUE@	test-ntl-lzz_pex            \
@LINBOX_HAVE_NTL_TRUE@	test-toeplitz-det					


# if LINBOX_HAVE_SAGE
# SAGE_LIBS = -L@libdir@ -llinboxsage
# test_regression_LDFLAGS = $(SAGE_LIBS)
# endif
OCL_TESTS = test-opencl-domain
@LINBOX_HAVE_OCL_TRUE@USE_OCL_TESTS = $(OCL_TESTS)
CLEANFILES = checker               \
			$(TESTS)              \
			$(BASIC_TESTS)        \
			$(FULLCHECK_TESTS)      \
			$(NTL_TESTS)          \
			$(OCL_TESTS)          \
			$(PERFPUBLISHERFILE)

test_bitonic_sort_SOURCES = test-bitonic-sort.C
test_blackbox_block_container_SOURCES = test-blackbox-block-container.C
test_blas_domain_SOURCES = test-blas-domain.C
test_blas_matrix_SOURCES = test-blas-matrix.C
test_block_ring_SOURCES = test-block-ring.C
test_block_wiedemann_SOURCES = test-block-wiedemann.C
test_butterfly_SOURCES = test-butterfly.C test-vector-domain.h test-blackbox.h
test_charpoly_SOURCES = test-charpoly.C
test_commentator_SOURCES = test-commentator.C
test_companion_SOURCES = test-companion.C
test_cradomain_SOURCES = test-cradomain.C test-common.h
test_cra_SOURCES = test-cra.C test-common.h
test_dense_SOURCES = test-dense.C test-common.h
test_dense_zero_one_SOURCES = test-dense-zero-one.C
test_det_SOURCES = test-det.C
test_diagonal_SOURCES = test-diagonal.C
test_dif_SOURCES = test-dif.C
test_direct_sum_SOURCES = test-direct-sum.C
test_dyadic_to_rational_SOURCES = test-dyadic-to-rational.C
test_echelon_form_SOURCES = test-echelon-form.C
test_ffpack_SOURCES = test-ffpack.C
test_fibb_SOURCES = test-fibb.C
test_frobenius_SOURCES = test-frobenius.C
test_ftrmm_SOURCES = test-ftrmm.C
test_getentry_SOURCES = test-getentry.C
test_gf2_SOURCES = test-gf2.C
test_givaropoly_SOURCES = test-givaropoly.C
test_givaro_zpz_SOURCES = test-givaro-zpz.C
test_givaro_zpzuns_SOURCES = test-givaro-zpzuns.C
test_gmp_rational_SOURCES = test-gmp-rational.C
test_hilbert_SOURCES = test-hilbert.C
test_hom_SOURCES = test-hom.C
test_image_field_SOURCES = test-image-field.C
test_inverse_SOURCES = test-inverse.C
test_isposdef_SOURCES = test-isposdef.C
test_ispossemidef_SOURCES = test-ispossemidef.C
test_la_block_lanczos_SOURCES = test-la-block-lanczos.C
test_last_invariant_factor_SOURCES = test-last-invariant-factor.C
test_matpoly_mult_SOURCES = test-matpoly-mult.C
test_matrix_domain_SOURCES = test-matrix-domain.C test-common.h
test_matrix_stream_SOURCES = test-matrix-stream.C
test_mg_block_lanczos_SOURCES = test-mg-block-lanczos.C
test_minpoly_SOURCES = test-minpoly.C
test_modular_balanced_double_SOURCES = test-modular-balanced-double.C
test_modular_balanced_float_SOURCES = test-modular-balanced-float.C
test_modular_balanced_int_SOURCES = test-modular-balanced-int.C
test_modular_byte_SOURCES = test-modular-byte.C
test_modular_double_SOURCES = test-modular-double.C
test_modular_float_SOURCES = test-modular-float.C
test_modular_int_SOURCES = test-modular-int.C
test_modular_short_SOURCES = test-modular-short.C
test_modular_SOURCES = test-modular.C
test_moore_penrose_SOURCES = test-moore-penrose.C
test_ntl_hankel_SOURCES = test-ntl-hankel.C
test_ntl_lzz_pe_SOURCES = test-ntl-lzz_pe.C test-field.h
test_ntl_lzz_pex_SOURCES = test-ntl-lzz_pex.C test-field.h
test_ntl_lzz_p_SOURCES = test-ntl-lzz_p.C test-field.h
test_ntl_lzz_px_SOURCES = test-ntl-lzz_px.C test-field.h
test_ntl_rr_SOURCES = test-ntl-rr.C
test_ntl_sylvester_SOURCES = test-ntl-sylvester.C
test_ntl_toeplitz_SOURCES = test-ntl-toeplitz.C
test_ntl_zz_p_SOURCES = test-ntl-zz_p.C
test_nullspace_SOURCES = test-nullspace.C
test_opencl_domain_SOURCES = test-opencl-domain.C
test_optimization_SOURCES = test-optimization.C
test_order_basis_SOURCES = test-order-basis.C
test_param_fuzzy_SOURCES = test-param-fuzzy.C
test_permutation_SOURCES = test-permutation.C
test_plain_domain_SOURCES = test-plain-domain.C
test_poly_det_SOURCES = test-poly-det.C
test_qlup_SOURCES = test-qlup.C
test_quad_matrix_SOURCES = test-quad-matrix.C
test_randiter_nonzero_SOURCES = test-randiter-nonzero.C
test_random_matrix_SOURCES = test-random-matrix.C
test_rank_Int_SOURCES = test-rank-Int.C test-rank.h
test_rank_md_SOURCES = test-rank-md.C test-rank.h
test_rank_u32_SOURCES = test-rank-u32.C test-rank.h
test_rat_charpoly_SOURCES = test-rat-charpoly.C test-common.h
test_rational_matrix_factory_SOURCES = test-rational-matrix-factory.C
test_rational_reconstruction_base_SOURCES = test-rational-reconstruction-base.C
test_rational_solver_adaptive_SOURCES = test-rational-solver-adaptive.C test-common.h
test_rational_solver_SOURCES = test-rational-solver.C
test_rat_minpoly_SOURCES = test-rat-minpoly.C test-common.h
test_rat_solve_SOURCES = test-rat-solve.C test-common.h
test_regression_SOURCES = test-regression.C
test_scalar_matrix_SOURCES = test-scalar-matrix.C
test_smith_form_adaptive_SOURCES = test-smith-form-adaptive.C test-common.h
test_smith_form_binary_SOURCES = test-smith-form-binary.C
test_smith_form_iliopoulos_SOURCES = test-smith-form-iliopoulos.C
test_smith_form_kannan_bachem_SOURCES = test-smith-form-kannan-bachem.C
test_smith_form_local_SOURCES = test-smith-form-local.C
test_smith_form_SOURCES = test-smith-form.C
test_solve_nonsingular_SOURCES = test-solve-nonsingular.C
test_solve_SOURCES = test-solve.C
test_sparse_SOURCES = test-sparse.C test-common.h
test_subiterator_SOURCES = test-subiterator.C test-common.h
test_submatrix_SOURCES = test-submatrix.C test-common.h
test_subvector_SOURCES = test-subvector.C test-common.h
test_sum_SOURCES = test-sum.C
test_toeplitz_det_SOURCES = test-toeplitz-det.C
test_toom_cook_SOURCES = test-toom-cook.C
test_trace_SOURCES = test-trace.C
test_transpose_SOURCES = test-transpose.C
test_triplesbb_omp_SOURCES = test-triplesbb-omp.C
test_triplesbb_SOURCES = test-triplesbb.C
test_tutorial_SOURCES = test-tutorial.C
test_vector_domain_SOURCES = test-vector-domain.C test-vector-domain.h
test_zero_one_SOURCES = test-zero-one.C
test_polynomial_ring_SOURCES = test-polynomial-ring.C
all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

test-bitonic-sort$(EXEEXT): $(test_bitonic_sort_OBJECTS) $(test_bitonic_sort_DEPENDENCIES) $(EXTRA_test_bitonic_sort_DEPENDENCIES) 
	@rm -f test-bitonic-sort$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bitonic_sort_OBJECTS) $(test_bitonic_sort_LDADD) $(LIBS)

test-blackbox-block-container$(EXEEXT): $(test_blackbox_block_container_OBJECTS) $(test_blackbox_block_container_DEPENDENCIES) $(EXTRA_test_blackbox_block_container_DEPENDENCIES) 
	@rm -f test-blackbox-block-container$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_blackbox_block_container_OBJECTS) $(test_blackbox_block_container_LDADD) $(LIBS)

test-blas-domain$(EXEEXT): $(test_blas_domain_OBJECTS) $(test_blas_domain_DEPENDENCIES) $(EXTRA_test_blas_domain_DEPENDENCIES) 
	@rm -f test-blas-domain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_blas_domain_OBJECTS) $(test_blas_domain_LDADD) $(LIBS)

test-blas-matrix$(EXEEXT): $(test_blas_matrix_OBJECTS) $(test_blas_matrix_DEPENDENCIES) $(EXTRA_test_blas_matrix_DEPENDENCIES) 
	@rm -f test-blas-matrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_blas_matrix_OBJECTS) $(test_blas_matrix_LDADD) $(LIBS)

test-block-ring$(EXEEXT): $(test_block_ring_OBJECTS) $(test_block_ring_DEPENDENCIES) $(EXTRA_test_block_ring_DEPENDENCIES) 
	@rm -f test-block-ring$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_block_ring_OBJECTS) $(test_block_ring_LDADD) $(LIBS)

test-block-wiedemann$(EXEEXT): $(test_block_wiedemann_OBJECTS) $(test_block_wiedemann_DEPENDENCIES) $(EXTRA_test_block_wiedemann_DEPENDENCIES) 
	@rm -f test-block-wiedemann$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_block_wiedemann_OBJECTS) $(test_block_wiedemann_LDADD) $(LIBS)

test-butterfly$(EXEEXT): $(test_butterfly_OBJECTS) $(test_butterfly_DEPENDENCIES) $(EXTRA_test_butterfly_DEPENDENCIES) 
	@rm -f test-butterfly$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_butterfly_OBJECTS) $(test_butterfly_LDADD) $(LIBS)

test-charpoly$(EXEEXT): $(test_charpoly_OBJECTS) $(test_charpoly_DEPENDENCIES) $(EXTRA_test_charpoly_DEPENDENCIES) 
	@rm -f test-charpoly$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_charpoly_OBJECTS) $(test_charpoly_LDADD) $(LIBS)

test-commentator$(EXEEXT): $(test_commentator_OBJECTS) $(test_commentator_DEPENDENCIES) $(EXTRA_test_commentator_DEPENDENCIES) 
	@rm -f test-commentator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_commentator_OBJECTS) $(test_commentator_LDADD) $(LIBS)

test-companion$(EXEEXT): $(test_companion_OBJECTS) $(test_companion_DEPENDENCIES) $(EXTRA_test_companion_DEPENDENCIES) 
	@rm -f test-companion$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_companion_OBJECTS) $(test_companion_LDADD) $(LIBS)

test-cra$(EXEEXT): $(test_cra_OBJECTS) $(test_cra_DEPENDENCIES) $(EXTRA_test_cra_DEPENDENCIES) 
	@rm -f test-cra$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_cra_OBJECTS) $(test_cra_LDADD) $(LIBS)

test-cradomain$(EXEEXT): $(test_cradomain_OBJECTS) $(test_cradomain_DEPENDENCIES) $(EXTRA_test_cradomain_DEPENDENCIES) 
	@rm -f test-cradomain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_cradomain_OBJECTS) $(test_cradomain_LDADD) $(LIBS)

test-dense$(EXEEXT): $(test_dense_OBJECTS) $(test_dense_DEPENDENCIES) $(EXTRA_test_dense_DEPENDENCIES) 
	@rm -f test-dense$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dense_OBJECTS) $(test_dense_LDADD) $(LIBS)

test-dense-zero-one$(EXEEXT): $(test_dense_zero_one_OBJECTS) $(test_dense_zero_one_DEPENDENCIES) $(EXTRA_test_dense_zero_one_DEPENDENCIES) 
	@rm -f test-dense-zero-one$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dense_zero_one_OBJECTS) $(test_dense_zero_one_LDADD) $(LIBS)

test-det$(EXEEXT): $(test_det_OBJECTS) $(test_det_DEPENDENCIES) $(EXTRA_test_det_DEPENDENCIES) 
	@rm -f test-det$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_det_OBJECTS) $(test_det_LDADD) $(LIBS)

test-diagonal$(EXEEXT): $(test_diagonal_OBJECTS) $(test_diagonal_DEPENDENCIES) $(EXTRA_test_diagonal_DEPENDENCIES) 
	@rm -f test-diagonal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_diagonal_OBJECTS) $(test_diagonal_LDADD) $(LIBS)

test-dif$(EXEEXT): $(test_dif_OBJECTS) $(test_dif_DEPENDENCIES) $(EXTRA_test_dif_DEPENDENCIES) 
	@rm -f test-dif$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dif_OBJECTS) $(test_dif_LDADD) $(LIBS)

test-direct-sum$(EXEEXT): $(test_direct_sum_OBJECTS) $(test_direct_sum_DEPENDENCIES) $(EXTRA_test_direct_sum_DEPENDENCIES) 
	@rm -f test-direct-sum$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_direct_sum_OBJECTS) $(test_direct_sum_LDADD) $(LIBS)

test-dyadic-to-rational$(EXEEXT): $(test_dyadic_to_rational_OBJECTS) $(test_dyadic_to_rational_DEPENDENCIES) $(EXTRA_test_dyadic_to_rational_DEPENDENCIES) 
	@rm -f test-dyadic-to-rational$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dyadic_to_rational_OBJECTS) $(test_dyadic_to_rational_LDADD) $(LIBS)

test-echelon-form$(EXEEXT): $(test_echelon_form_OBJECTS) $(test_echelon_form_DEPENDENCIES) $(EXTRA_test_echelon_form_DEPENDENCIES) 
	@rm -f test-echelon-form$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_echelon_form_OBJECTS) $(test_echelon_form_LDADD) $(LIBS)

test-ffpack$(EXEEXT): $(test_ffpack_OBJECTS) $(test_ffpack_DEPENDENCIES) $(EXTRA_test_ffpack_DEPENDENCIES) 
	@rm -f test-ffpack$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ffpack_OBJECTS) $(test_ffpack_LDADD) $(LIBS)

test-fibb$(EXEEXT): $(test_fibb_OBJECTS) $(test_fibb_DEPENDENCIES) $(EXTRA_test_fibb_DEPENDENCIES) 
	@rm -f test-fibb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_fibb_OBJECTS) $(test_fibb_LDADD) $(LIBS)

test-frobenius$(EXEEXT): $(test_frobenius_OBJECTS) $(test_frobenius_DEPENDENCIES) $(EXTRA_test_frobenius_DEPENDENCIES) 
	@rm -f test-frobenius$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_frobenius_OBJECTS) $(test_frobenius_LDADD) $(LIBS)

test-ftrmm$(EXEEXT): $(test_ftrmm_OBJECTS) $(test_ftrmm_DEPENDENCIES) $(EXTRA_test_ftrmm_DEPENDENCIES) 
	@rm -f test-ftrmm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ftrmm_OBJECTS) $(test_ftrmm_LDADD) $(LIBS)

test-getentry$(EXEEXT): $(test_getentry_OBJECTS) $(test_getentry_DEPENDENCIES) $(EXTRA_test_getentry_DEPENDENCIES) 
	@rm -f test-getentry$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_getentry_OBJECTS) $(test_getentry_LDADD) $(LIBS)

test-gf2$(EXEEXT): $(test_gf2_OBJECTS) $(test_gf2_DEPENDENCIES) $(EXTRA_test_gf2_DEPENDENCIES) 
	@rm -f test-gf2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_gf2_OBJECTS) $(test_gf2_LDADD) $(LIBS)

test-givaro-zpz$(EXEEXT): $(test_givaro_zpz_OBJECTS) $(test_givaro_zpz_DEPENDENCIES) $(EXTRA_test_givaro_zpz_DEPENDENCIES) 
	@rm -f test-givaro-zpz$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_givaro_zpz_OBJECTS) $(test_givaro_zpz_LDADD) $(LIBS)

test-givaro-zpzuns$(EXEEXT): $(test_givaro_zpzuns_OBJECTS) $(test_givaro_zpzuns_DEPENDENCIES) $(EXTRA_test_givaro_zpzuns_DEPENDENCIES) 
	@rm -f test-givaro-zpzuns$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_givaro_zpzuns_OBJECTS) $(test_givaro_zpzuns_LDADD) $(LIBS)

test-givaropoly$(EXEEXT): $(test_givaropoly_OBJECTS) $(test_givaropoly_DEPENDENCIES) $(EXTRA_test_givaropoly_DEPENDENCIES) 
	@rm -f test-givaropoly$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_givaropoly_OBJECTS) $(test_givaropoly_LDADD) $(LIBS)

test-gmp-rational$(EXEEXT): $(test_gmp_rational_OBJECTS) $(test_gmp_rational_DEPENDENCIES) $(EXTRA_test_gmp_rational_DEPENDENCIES) 
	@rm -f test-gmp-rational$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_gmp_rational_OBJECTS) $(test_gmp_rational_LDADD) $(LIBS)

test-hilbert$(EXEEXT): $(test_hilbert_OBJECTS) $(test_hilbert_DEPENDENCIES) $(EXTRA_test_hilbert_DEPENDENCIES) 
	@rm -f test-hilbert$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_hilbert_OBJECTS) $(test_hilbert_LDADD) $(LIBS)

test-hom$(EXEEXT): $(test_hom_OBJECTS) $(test_hom_DEPENDENCIES) $(EXTRA_test_hom_DEPENDENCIES) 
	@rm -f test-hom$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_hom_OBJECTS) $(test_hom_LDADD) $(LIBS)

test-image-field$(EXEEXT): $(test_image_field_OBJECTS) $(test_image_field_DEPENDENCIES) $(EXTRA_test_image_field_DEPENDENCIES) 
	@rm -f test-image-field$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_image_field_OBJECTS) $(test_image_field_LDADD) $(LIBS)

test-inverse$(EXEEXT): $(test_inverse_OBJECTS) $(test_inverse_DEPENDENCIES) $(EXTRA_test_inverse_DEPENDENCIES) 
	@rm -f test-inverse$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_inverse_OBJECTS) $(test_inverse_LDADD) $(LIBS)

test-isposdef$(EXEEXT): $(test_isposdef_OBJECTS) $(test_isposdef_DEPENDENCIES) $(EXTRA_test_isposdef_DEPENDENCIES) 
	@rm -f test-isposdef$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_isposdef_OBJECTS) $(test_isposdef_LDADD) $(LIBS)

test-ispossemidef$(EXEEXT): $(test_ispossemidef_OBJECTS) $(test_ispossemidef_DEPENDENCIES) $(EXTRA_test_ispossemidef_DEPENDENCIES) 
	@rm -f test-ispossemidef$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ispossemidef_OBJECTS) $(test_ispossemidef_LDADD) $(LIBS)

test-la-block-lanczos$(EXEEXT): $(test_la_block_lanczos_OBJECTS) $(test_la_block_lanczos_DEPENDENCIES) $(EXTRA_test_la_block_lanczos_DEPENDENCIES) 
	@rm -f test-la-block-lanczos$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_la_block_lanczos_OBJECTS) $(test_la_block_lanczos_LDADD) $(LIBS)

test-last-invariant-factor$(EXEEXT): $(test_last_invariant_factor_OBJECTS) $(test_last_invariant_factor_DEPENDENCIES) $(EXTRA_test_last_invariant_factor_DEPENDENCIES) 
	@rm -f test-last-invariant-factor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_last_invariant_factor_OBJECTS) $(test_last_invariant_factor_LDADD) $(LIBS)

test-matpoly-mult$(EXEEXT): $(test_matpoly_mult_OBJECTS) $(test_matpoly_mult_DEPENDENCIES) $(EXTRA_test_matpoly_mult_DEPENDENCIES) 
	@rm -f test-matpoly-mult$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_matpoly_mult_OBJECTS) $(test_matpoly_mult_LDADD) $(LIBS)

test-matrix-domain$(EXEEXT): $(test_matrix_domain_OBJECTS) $(test_matrix_domain_DEPENDENCIES) $(EXTRA_test_matrix_domain_DEPENDENCIES) 
	@rm -f test-matrix-domain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_matrix_domain_OBJECTS) $(test_matrix_domain_LDADD) $(LIBS)

test-matrix-stream$(EXEEXT): $(test_matrix_stream_OBJECTS) $(test_matrix_stream_DEPENDENCIES) $(EXTRA_test_matrix_stream_DEPENDENCIES) 
	@rm -f test-matrix-stream$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_matrix_stream_OBJECTS) $(test_matrix_stream_LDADD) $(LIBS)

test-mg-block-lanczos$(EXEEXT): $(test_mg_block_lanczos_OBJECTS) $(test_mg_block_lanczos_DEPENDENCIES) $(EXTRA_test_mg_block_lanczos_DEPENDENCIES) 
	@rm -f test-mg-block-lanczos$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_mg_block_lanczos_OBJECTS) $(test_mg_block_lanczos_LDADD) $(LIBS)

test-minpoly$(EXEEXT): $(test_minpoly_OBJECTS) $(test_minpoly_DEPENDENCIES) $(EXTRA_test_minpoly_DEPENDENCIES) 
	@rm -f test-minpoly$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_minpoly_OBJECTS) $(test_minpoly_LDADD) $(LIBS)

test-modular$(EXEEXT): $(test_modular_OBJECTS) $(test_modular_DEPENDENCIES) $(EXTRA_test_modular_DEPENDENCIES) 
	@rm -f test-modular$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_OBJECTS) $(test_modular_LDADD) $(LIBS)

test-modular-balanced-double$(EXEEXT): $(test_modular_balanced_double_OBJECTS) $(test_modular_balanced_double_DEPENDENCIES) $(EXTRA_test_modular_balanced_double_DEPENDENCIES) 
	@rm -f test-modular-balanced-double$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_balanced_double_OBJECTS) $(test_modular_balanced_double_LDADD) $(LIBS)

test-modular-balanced-float$(EXEEXT): $(test_modular_balanced_float_OBJECTS) $(test_modular_balanced_float_DEPENDENCIES) $(EXTRA_test_modular_balanced_float_DEPENDENCIES) 
	@rm -f test-modular-balanced-float$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_balanced_float_OBJECTS) $(test_modular_balanced_float_LDADD) $(LIBS)

test-modular-balanced-int$(EXEEXT): $(test_modular_balanced_int_OBJECTS) $(test_modular_balanced_int_DEPENDENCIES) $(EXTRA_test_modular_balanced_int_DEPENDENCIES) 
	@rm -f test-modular-balanced-int$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_balanced_int_OBJECTS) $(test_modular_balanced_int_LDADD) $(LIBS)

test-modular-byte$(EXEEXT): $(test_modular_byte_OBJECTS) $(test_modular_byte_DEPENDENCIES) $(EXTRA_test_modular_byte_DEPENDENCIES) 
	@rm -f test-modular-byte$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_byte_OBJECTS) $(test_modular_byte_LDADD) $(LIBS)

test-modular-double$(EXEEXT): $(test_modular_double_OBJECTS) $(test_modular_double_DEPENDENCIES) $(EXTRA_test_modular_double_DEPENDENCIES) 
	@rm -f test-modular-double$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_double_OBJECTS) $(test_modular_double_LDADD) $(LIBS)

test-modular-float$(EXEEXT): $(test_modular_float_OBJECTS) $(test_modular_float_DEPENDENCIES) $(EXTRA_test_modular_float_DEPENDENCIES) 
	@rm -f test-modular-float$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_float_OBJECTS) $(test_modular_float_LDADD) $(LIBS)

test-modular-int$(EXEEXT): $(test_modular_int_OBJECTS) $(test_modular_int_DEPENDENCIES) $(EXTRA_test_modular_int_DEPENDENCIES) 
	@rm -f test-modular-int$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_int_OBJECTS) $(test_modular_int_LDADD) $(LIBS)

test-modular-short$(EXEEXT): $(test_modular_short_OBJECTS) $(test_modular_short_DEPENDENCIES) $(EXTRA_test_modular_short_DEPENDENCIES) 
	@rm -f test-modular-short$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_modular_short_OBJECTS) $(test_modular_short_LDADD) $(LIBS)

test-moore-penrose$(EXEEXT): $(test_moore_penrose_OBJECTS) $(test_moore_penrose_DEPENDENCIES) $(EXTRA_test_moore_penrose_DEPENDENCIES) 
	@rm -f test-moore-penrose$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_moore_penrose_OBJECTS) $(test_moore_penrose_LDADD) $(LIBS)

test-ntl-hankel$(EXEEXT): $(test_ntl_hankel_OBJECTS) $(test_ntl_hankel_DEPENDENCIES) $(EXTRA_test_ntl_hankel_DEPENDENCIES) 
	@rm -f test-ntl-hankel$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_hankel_OBJECTS) $(test_ntl_hankel_LDADD) $(LIBS)

test-ntl-lzz_p$(EXEEXT): $(test_ntl_lzz_p_OBJECTS) $(test_ntl_lzz_p_DEPENDENCIES) $(EXTRA_test_ntl_lzz_p_DEPENDENCIES) 
	@rm -f test-ntl-lzz_p$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_lzz_p_OBJECTS) $(test_ntl_lzz_p_LDADD) $(LIBS)

test-ntl-lzz_pe$(EXEEXT): $(test_ntl_lzz_pe_OBJECTS) $(test_ntl_lzz_pe_DEPENDENCIES) $(EXTRA_test_ntl_lzz_pe_DEPENDENCIES) 
	@rm -f test-ntl-lzz_pe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_lzz_pe_OBJECTS) $(test_ntl_lzz_pe_LDADD) $(LIBS)

test-ntl-lzz_pex$(EXEEXT): $(test_ntl_lzz_pex_OBJECTS) $(test_ntl_lzz_pex_DEPENDENCIES) $(EXTRA_test_ntl_lzz_pex_DEPENDENCIES) 
	@rm -f test-ntl-lzz_pex$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_lzz_pex_OBJECTS) $(test_ntl_lzz_pex_LDADD) $(LIBS)

test-ntl-lzz_px$(EXEEXT): $(test_ntl_lzz_px_OBJECTS) $(test_ntl_lzz_px_DEPENDENCIES) $(EXTRA_test_ntl_lzz_px_DEPENDENCIES) 
	@rm -f test-ntl-lzz_px$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_lzz_px_OBJECTS) $(test_ntl_lzz_px_LDADD) $(LIBS)

test-ntl-rr$(EXEEXT): $(test_ntl_rr_OBJECTS) $(test_ntl_rr_DEPENDENCIES) $(EXTRA_test_ntl_rr_DEPENDENCIES) 
	@rm -f test-ntl-rr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_rr_OBJECTS) $(test_ntl_rr_LDADD) $(LIBS)

test-ntl-sylvester$(EXEEXT): $(test_ntl_sylvester_OBJECTS) $(test_ntl_sylvester_DEPENDENCIES) $(EXTRA_test_ntl_sylvester_DEPENDENCIES) 
	@rm -f test-ntl-sylvester$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_sylvester_OBJECTS) $(test_ntl_sylvester_LDADD) $(LIBS)

test-ntl-toeplitz$(EXEEXT): $(test_ntl_toeplitz_OBJECTS) $(test_ntl_toeplitz_DEPENDENCIES) $(EXTRA_test_ntl_toeplitz_DEPENDENCIES) 
	@rm -f test-ntl-toeplitz$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_toeplitz_OBJECTS) $(test_ntl_toeplitz_LDADD) $(LIBS)

test-ntl-zz_p$(EXEEXT): $(test_ntl_zz_p_OBJECTS) $(test_ntl_zz_p_DEPENDENCIES) $(EXTRA_test_ntl_zz_p_DEPENDENCIES) 
	@rm -f test-ntl-zz_p$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ntl_zz_p_OBJECTS) $(test_ntl_zz_p_LDADD) $(LIBS)

test-nullspace$(EXEEXT): $(test_nullspace_OBJECTS) $(test_nullspace_DEPENDENCIES) $(EXTRA_test_nullspace_DEPENDENCIES) 
	@rm -f test-nullspace$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_nullspace_OBJECTS) $(test_nullspace_LDADD) $(LIBS)

test-opencl-domain$(EXEEXT): $(test_opencl_domain_OBJECTS) $(test_opencl_domain_DEPENDENCIES) $(EXTRA_test_opencl_domain_DEPENDENCIES) 
	@rm -f test-opencl-domain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_opencl_domain_OBJECTS) $(test_opencl_domain_LDADD) $(LIBS)

test-optimization$(EXEEXT): $(test_optimization_OBJECTS) $(test_optimization_DEPENDENCIES) $(EXTRA_test_optimization_DEPENDENCIES) 
	@rm -f test-optimization$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_optimization_OBJECTS) $(test_optimization_LDADD) $(LIBS)

test-order-basis$(EXEEXT): $(test_order_basis_OBJECTS) $(test_order_basis_DEPENDENCIES) $(EXTRA_test_order_basis_DEPENDENCIES) 
	@rm -f test-order-basis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_order_basis_OBJECTS) $(test_order_basis_LDADD) $(LIBS)

test-param-fuzzy$(EXEEXT): $(test_param_fuzzy_OBJECTS) $(test_param_fuzzy_DEPENDENCIES) $(EXTRA_test_param_fuzzy_DEPENDENCIES) 
	@rm -f test-param-fuzzy$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_param_fuzzy_OBJECTS) $(test_param_fuzzy_LDADD) $(LIBS)

test-permutation$(EXEEXT): $(test_permutation_OBJECTS) $(test_permutation_DEPENDENCIES) $(EXTRA_test_permutation_DEPENDENCIES) 
	@rm -f test-permutation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_permutation_OBJECTS) $(test_permutation_LDADD) $(LIBS)

test-plain-domain$(EXEEXT): $(test_plain_domain_OBJECTS) $(test_plain_domain_DEPENDENCIES) $(EXTRA_test_plain_domain_DEPENDENCIES) 
	@rm -f test-plain-domain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_plain_domain_OBJECTS) $(test_plain_domain_LDADD) $(LIBS)

test-poly-det$(EXEEXT): $(test_poly_det_OBJECTS) $(test_poly_det_DEPENDENCIES) $(EXTRA_test_poly_det_DEPENDENCIES) 
	@rm -f test-poly-det$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_poly_det_OBJECTS) $(test_poly_det_LDADD) $(LIBS)

test-polynomial-ring$(EXEEXT): $(test_polynomial_ring_OBJECTS) $(test_polynomial_ring_DEPENDENCIES) $(EXTRA_test_polynomial_ring_DEPENDENCIES) 
	@rm -f test-polynomial-ring$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_polynomial_ring_OBJECTS) $(test_polynomial_ring_LDADD) $(LIBS)

test-qlup$(EXEEXT): $(test_qlup_OBJECTS) $(test_qlup_DEPENDENCIES) $(EXTRA_test_qlup_DEPENDENCIES) 
	@rm -f test-qlup$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_qlup_OBJECTS) $(test_qlup_LDADD) $(LIBS)

test-quad-matrix$(EXEEXT): $(test_quad_matrix_OBJECTS) $(test_quad_matrix_DEPENDENCIES) $(EXTRA_test_quad_matrix_DEPENDENCIES) 
	@rm -f test-quad-matrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_quad_matrix_OBJECTS) $(test_quad_matrix_LDADD) $(LIBS)

test-randiter-nonzero$(EXEEXT): $(test_randiter_nonzero_OBJECTS) $(test_randiter_nonzero_DEPENDENCIES) $(EXTRA_test_randiter_nonzero_DEPENDENCIES) 
	@rm -f test-randiter-nonzero$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_randiter_nonzero_OBJECTS) $(test_randiter_nonzero_LDADD) $(LIBS)

test-random-matrix$(EXEEXT): $(test_random_matrix_OBJECTS) $(test_random_matrix_DEPENDENCIES) $(EXTRA_test_random_matrix_DEPENDENCIES) 
	@rm -f test-random-matrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_random_matrix_OBJECTS) $(test_random_matrix_LDADD) $(LIBS)

test-rank-Int$(EXEEXT): $(test_rank_Int_OBJECTS) $(test_rank_Int_DEPENDENCIES) $(EXTRA_test_rank_Int_DEPENDENCIES) 
	@rm -f test-rank-Int$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rank_Int_OBJECTS) $(test_rank_Int_LDADD) $(LIBS)

test-rank-md$(EXEEXT): $(test_rank_md_OBJECTS) $(test_rank_md_DEPENDENCIES) $(EXTRA_test_rank_md_DEPENDENCIES) 
	@rm -f test-rank-md$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rank_md_OBJECTS) $(test_rank_md_LDADD) $(LIBS)

test-rank-u32$(EXEEXT): $(test_rank_u32_OBJECTS) $(test_rank_u32_DEPENDENCIES) $(EXTRA_test_rank_u32_DEPENDENCIES) 
	@rm -f test-rank-u32$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rank_u32_OBJECTS) $(test_rank_u32_LDADD) $(LIBS)

test-rat-charpoly$(EXEEXT): $(test_rat_charpoly_OBJECTS) $(test_rat_charpoly_DEPENDENCIES) $(EXTRA_test_rat_charpoly_DEPENDENCIES) 
	@rm -f test-rat-charpoly$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rat_charpoly_OBJECTS) $(test_rat_charpoly_LDADD) $(LIBS)

test-rat-minpoly$(EXEEXT): $(test_rat_minpoly_OBJECTS) $(test_rat_minpoly_DEPENDENCIES) $(EXTRA_test_rat_minpoly_DEPENDENCIES) 
	@rm -f test-rat-minpoly$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rat_minpoly_OBJECTS) $(test_rat_minpoly_LDADD) $(LIBS)

test-rat-solve$(EXEEXT): $(test_rat_solve_OBJECTS) $(test_rat_solve_DEPENDENCIES) $(EXTRA_test_rat_solve_DEPENDENCIES) 
	@rm -f test-rat-solve$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rat_solve_OBJECTS) $(test_rat_solve_LDADD) $(LIBS)

test-rational-matrix-factory$(EXEEXT): $(test_rational_matrix_factory_OBJECTS) $(test_rational_matrix_factory_DEPENDENCIES) $(EXTRA_test_rational_matrix_factory_DEPENDENCIES) 
	@rm -f test-rational-matrix-factory$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rational_matrix_factory_OBJECTS) $(test_rational_matrix_factory_LDADD) $(LIBS)

test-rational-reconstruction-base$(EXEEXT): $(test_rational_reconstruction_base_OBJECTS) $(test_rational_reconstruction_base_DEPENDENCIES) $(EXTRA_test_rational_reconstruction_base_DEPENDENCIES) 
	@rm -f test-rational-reconstruction-base$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rational_reconstruction_base_OBJECTS) $(test_rational_reconstruction_base_LDADD) $(LIBS)

test-rational-solver$(EXEEXT): $(test_rational_solver_OBJECTS) $(test_rational_solver_DEPENDENCIES) $(EXTRA_test_rational_solver_DEPENDENCIES) 
	@rm -f test-rational-solver$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rational_solver_OBJECTS) $(test_rational_solver_LDADD) $(LIBS)

test-rational-solver-adaptive$(EXEEXT): $(test_rational_solver_adaptive_OBJECTS) $(test_rational_solver_adaptive_DEPENDENCIES) $(EXTRA_test_rational_solver_adaptive_DEPENDENCIES) 
	@rm -f test-rational-solver-adaptive$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rational_solver_adaptive_OBJECTS) $(test_rational_solver_adaptive_LDADD) $(LIBS)

test-regression$(EXEEXT): $(test_regression_OBJECTS) $(test_regression_DEPENDENCIES) $(EXTRA_test_regression_DEPENDENCIES) 
	@rm -f test-regression$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_regression_OBJECTS) $(test_regression_LDADD) $(LIBS)

test-scalar-matrix$(EXEEXT): $(test_scalar_matrix_OBJECTS) $(test_scalar_matrix_DEPENDENCIES) $(EXTRA_test_scalar_matrix_DEPENDENCIES) 
	@rm -f test-scalar-matrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_scalar_matrix_OBJECTS) $(test_scalar_matrix_LDADD) $(LIBS)

test-smith-form$(EXEEXT): $(test_smith_form_OBJECTS) $(test_smith_form_DEPENDENCIES) $(EXTRA_test_smith_form_DEPENDENCIES) 
	@rm -f test-smith-form$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smith_form_OBJECTS) $(test_smith_form_LDADD) $(LIBS)

test-smith-form-adaptive$(EXEEXT): $(test_smith_form_adaptive_OBJECTS) $(test_smith_form_adaptive_DEPENDENCIES) $(EXTRA_test_smith_form_adaptive_DEPENDENCIES) 
	@rm -f test-smith-form-adaptive$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smith_form_adaptive_OBJECTS) $(test_smith_form_adaptive_LDADD) $(LIBS)

test-smith-form-binary$(EXEEXT): $(test_smith_form_binary_OBJECTS) $(test_smith_form_binary_DEPENDENCIES) $(EXTRA_test_smith_form_binary_DEPENDENCIES) 
	@rm -f test-smith-form-binary$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smith_form_binary_OBJECTS) $(test_smith_form_binary_LDADD) $(LIBS)

test-smith-form-iliopoulos$(EXEEXT): $(test_smith_form_iliopoulos_OBJECTS) $(test_smith_form_iliopoulos_DEPENDENCIES) $(EXTRA_test_smith_form_iliopoulos_DEPENDENCIES) 
	@rm -f test-smith-form-iliopoulos$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smith_form_iliopoulos_OBJECTS) $(test_smith_form_iliopoulos_LDADD) $(LIBS)

test-smith-form-kannan-bachem$(EXEEXT): $(test_smith_form_kannan_bachem_OBJECTS) $(test_smith_form_kannan_bachem_DEPENDENCIES) $(EXTRA_test_smith_form_kannan_bachem_DEPENDENCIES) 
	@rm -f test-smith-form-kannan-bachem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smith_form_kannan_bachem_OBJECTS) $(test_smith_form_kannan_bachem_LDADD) $(LIBS)

test-smith-form-local$(EXEEXT): $(test_smith_form_local_OBJECTS) $(test_smith_form_local_DEPENDENCIES) $(EXTRA_test_smith_form_local_DEPENDENCIES) 
	@rm -f test-smith-form-local$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smith_form_local_OBJECTS) $(test_smith_form_local_LDADD) $(LIBS)

test-solve$(EXEEXT): $(test_solve_OBJECTS) $(test_solve_DEPENDENCIES) $(EXTRA_test_solve_DEPENDENCIES) 
	@rm -f test-solve$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_solve_OBJECTS) $(test_solve_LDADD) $(LIBS)

test-solve-nonsingular$(EXEEXT): $(test_solve_nonsingular_OBJECTS) $(test_solve_nonsingular_DEPENDENCIES) $(EXTRA_test_solve_nonsingular_DEPENDENCIES) 
	@rm -f test-solve-nonsingular$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_solve_nonsingular_OBJECTS) $(test_solve_nonsingular_LDADD) $(LIBS)

test-sparse$(EXEEXT): $(test_sparse_OBJECTS) $(test_sparse_DEPENDENCIES) $(EXTRA_test_sparse_DEPENDENCIES) 
	@rm -f test-sparse$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_sparse_OBJECTS) $(test_sparse_LDADD) $(LIBS)

test-subiterator$(EXEEXT): $(test_subiterator_OBJECTS) $(test_subiterator_DEPENDENCIES) $(EXTRA_test_subiterator_DEPENDENCIES) 
	@rm -f test-subiterator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_subiterator_OBJECTS) $(test_subiterator_LDADD) $(LIBS)

test-submatrix$(EXEEXT): $(test_submatrix_OBJECTS) $(test_submatrix_DEPENDENCIES) $(EXTRA_test_submatrix_DEPENDENCIES) 
	@rm -f test-submatrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_submatrix_OBJECTS) $(test_submatrix_LDADD) $(LIBS)

test-subvector$(EXEEXT): $(test_subvector_OBJECTS) $(test_subvector_DEPENDENCIES) $(EXTRA_test_subvector_DEPENDENCIES) 
	@rm -f test-subvector$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_subvector_OBJECTS) $(test_subvector_LDADD) $(LIBS)

test-sum$(EXEEXT): $(test_sum_OBJECTS) $(test_sum_DEPENDENCIES) $(EXTRA_test_sum_DEPENDENCIES) 
	@rm -f test-sum$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_sum_OBJECTS) $(test_sum_LDADD) $(LIBS)

test-toeplitz-det$(EXEEXT): $(test_toeplitz_det_OBJECTS) $(test_toeplitz_det_DEPENDENCIES) $(EXTRA_test_toeplitz_det_DEPENDENCIES) 
	@rm -f test-toeplitz-det$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_toeplitz_det_OBJECTS) $(test_toeplitz_det_LDADD) $(LIBS)

test-toom-cook$(EXEEXT): $(test_toom_cook_OBJECTS) $(test_toom_cook_DEPENDENCIES) $(EXTRA_test_toom_cook_DEPENDENCIES) 
	@rm -f test-toom-cook$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_toom_cook_OBJECTS) $(test_toom_cook_LDADD) $(LIBS)

test-trace$(EXEEXT): $(test_trace_OBJECTS) $(test_trace_DEPENDENCIES) $(EXTRA_test_trace_DEPENDENCIES) 
	@rm -f test-trace$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_trace_OBJECTS) $(test_trace_LDADD) $(LIBS)

test-transpose$(EXEEXT): $(test_transpose_OBJECTS) $(test_transpose_DEPENDENCIES) $(EXTRA_test_transpose_DEPENDENCIES) 
	@rm -f test-transpose$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_transpose_OBJECTS) $(test_transpose_LDADD) $(LIBS)

test-triplesbb$(EXEEXT): $(test_triplesbb_OBJECTS) $(test_triplesbb_DEPENDENCIES) $(EXTRA_test_triplesbb_DEPENDENCIES) 
	@rm -f test-triplesbb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_triplesbb_OBJECTS) $(test_triplesbb_LDADD) $(LIBS)

test-triplesbb-omp$(EXEEXT): $(test_triplesbb_omp_OBJECTS) $(test_triplesbb_omp_DEPENDENCIES) $(EXTRA_test_triplesbb_omp_DEPENDENCIES) 
	@rm -f test-triplesbb-omp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_triplesbb_omp_OBJECTS) $(test_triplesbb_omp_LDADD) $(LIBS)

test-tutorial$(EXEEXT): $(test_tutorial_OBJECTS) $(test_tutorial_DEPENDENCIES) $(EXTRA_test_tutorial_DEPENDENCIES) 
	@rm -f test-tutorial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_tutorial_OBJECTS) $(test_tutorial_LDADD) $(LIBS)

test-vector-domain$(EXEEXT): $(test_vector_domain_OBJECTS) $(test_vector_domain_DEPENDENCIES) $(EXTRA_test_vector_domain_DEPENDENCIES) 
	@rm -f test-vector-domain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_vector_domain_OBJECTS) $(test_vector_domain_LDADD) $(LIBS)

test-zero-one$(EXEEXT): $(test_zero_one_OBJECTS) $(test_zero_one_DEPENDENCIES) $(EXTRA_test_zero_one_DEPENDENCIES) 
	@rm -f test-zero-one$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_zero_one_OBJECTS) $(test_zero_one_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bitonic-sort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-blackbox-block-container.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-blas-domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-blas-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-block-ring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-block-wiedemann.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-butterfly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-charpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-commentator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-companion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-cra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-cradomain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dense-zero-one.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dense.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-det.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-diagonal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-direct-sum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dyadic-to-rational.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-echelon-form.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ffpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-fibb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-frobenius.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ftrmm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-getentry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gf2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-givaro-zpz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-givaro-zpzuns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-givaropoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gmp-rational.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-hilbert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-hom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-image-field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-inverse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-isposdef.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ispossemidef.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-la-block-lanczos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-last-invariant-factor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-matpoly-mult.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-matrix-domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-matrix-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-mg-block-lanczos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-minpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-balanced-double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-balanced-float.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-balanced-int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-byte.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-float.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular-short.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-modular.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-moore-penrose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-hankel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-lzz_p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-lzz_pe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-lzz_pex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-lzz_px.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-rr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-sylvester.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-toeplitz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ntl-zz_p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-nullspace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-opencl-domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-optimization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-order-basis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-param-fuzzy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-permutation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-plain-domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-poly-det.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-polynomial-ring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-qlup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-quad-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-randiter-nonzero.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-random-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rank-Int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rank-md.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rank-u32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rat-charpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rat-minpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rat-solve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rational-matrix-factory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rational-reconstruction-base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rational-solver-adaptive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rational-solver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-regression.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-scalar-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-smith-form-adaptive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-smith-form-binary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-smith-form-iliopoulos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-smith-form-kannan-bachem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-smith-form-local.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-smith-form.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-solve-nonsingular.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-solve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-sparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-subiterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-submatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-subvector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-sum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-toeplitz-det.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-toom-cook.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-trace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-transpose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-triplesbb-omp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-triplesbb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-tutorial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-vector-domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-zero-one.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test-commentator.log: test-commentator$(EXEEXT)
	@p='test-commentator$(EXEEXT)'; \
	b='test-commentator'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-det.log: test-det$(EXEEXT)
	@p='test-det$(EXEEXT)'; \
	b='test-det'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-frobenius.log: test-frobenius$(EXEEXT)
	@p='test-frobenius$(EXEEXT)'; \
	b='test-frobenius'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-solve.log: test-solve$(EXEEXT)
	@p='test-solve$(EXEEXT)'; \
	b='test-solve'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-rational-solver.log: test-rational-solver$(EXEEXT)
	@p='test-rational-solver$(EXEEXT)'; \
	b='test-rational-solver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-rational-solver-adaptive.log: test-rational-solver-adaptive$(EXEEXT)
	@p='test-rational-solver-adaptive$(EXEEXT)'; \
	b='test-rational-solver-adaptive'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-rank-u32.log: test-rank-u32$(EXEEXT)
	@p='test-rank-u32$(EXEEXT)'; \
	b='test-rank-u32'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-rank-md.log: test-rank-md$(EXEEXT)
	@p='test-rank-md$(EXEEXT)'; \
	b='test-rank-md'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-rank-Int.log: test-rank-Int$(EXEEXT)
	@p='test-rank-Int$(EXEEXT)'; \
	b='test-rank-Int'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-cra.log: test-cra$(EXEEXT)
	@p='test-cra$(EXEEXT)'; \
	b='test-cra'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-blas-matrix.log: test-blas-matrix$(EXEEXT)
	@p='test-blas-matrix$(EXEEXT)'; \
	b='test-blas-matrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-charpoly.log: test-charpoly$(EXEEXT)
	@p='test-charpoly$(EXEEXT)'; \
	b='test-charpoly'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-isposdef.log: test-isposdef$(EXEEXT)
	@p='test-isposdef$(EXEEXT)'; \
	b='test-isposdef'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-ispossemidef.log: test-ispossemidef$(EXEEXT)
	@p='test-ispossemidef$(EXEEXT)'; \
	b='test-ispossemidef'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-regression.log: test-regression$(EXEEXT)
	@p='test-regression$(EXEEXT)'; \
	b='test-regression'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-ntl-lzz_pex.log: test-ntl-lzz_pex$(EXEEXT)
	@p='test-ntl-lzz_pex$(EXEEXT)'; \
	b='test-ntl-lzz_pex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-toeplitz-det.log: test-toeplitz-det$(EXEEXT)
	@p='test-toeplitz-det$(EXEEXT)'; \
	b='test-toeplitz-det'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-opencl-domain.log: test-opencl-domain$(EXEEXT)
	@p='test-opencl-domain$(EXEEXT)'; \
	b='test-opencl-domain'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# Perfpublisher script interaction - AB 2014/12/11
perfpublisher:
	+./perfpublisher.sh "$(PERFPUBLISHERFILE)" "$(TESTS)" "$(CXX)"
	mv $(PERFPUBLISHERFILE) ..
	make clean
	mv ../$(PERFPUBLISHERFILE) .

# for compilation of non-enumerated programs
%:%.C
	$(CXX) $(CXXFLAGS) $(AM_CPPFLAGS)  ${INCLUDES} $(AM_CPPFLAGS) $*.C -o $@ $(LDADD)

fullcheck: checker
	./checker

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
