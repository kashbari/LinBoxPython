# Makefile.in generated by automake 1.15 from Makefile.am.
# autotune/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2016 FFLAS-FFPACK
# written by Cl√©ment Pernet <Clement.Pernet@imag.fr>
# Philippe LEDENT <philippe.ledent@etu.univ-grenoble-alpes.fr>
# ========LICENCE========
# This file is part of the library FFLAS-FFPACK.
#
# FFLAS-FFPACK is free software: you can redistribute it and/or modify
# it under the terms of the  GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# ========LICENCE========
#/

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/fflas-ffpack
pkgincludedir = $(includedir)/fflas-ffpack
pkglibdir = $(libdir)/fflas-ffpack
pkglibexecdir = $(libexecdir)/fflas-ffpack
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
EXTRA_PROGRAMS = $(am__EXEEXT_7)
subdir = autotune
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/macros/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/macros/config-header.m4 \
	$(top_srcdir)/macros/debug.m4 \
	$(top_srcdir)/macros/fflas-ffpack-blas.m4 \
	$(top_srcdir)/macros/fflas-ffpack-doc.m4 \
	$(top_srcdir)/macros/fflas-ffpack-misc.m4 \
	$(top_srcdir)/macros/fflas-ffpack-precompile.m4 \
	$(top_srcdir)/macros/instr_set.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/mkl-check.m4 \
	$(top_srcdir)/macros/omp-check.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = winograd-modular-float$(EXEEXT) \
	winograd-modular-double$(EXEEXT) \
	winograd-modularbalanced-float$(EXEEXT) \
	winograd-modularbalanced-double$(EXEEXT)
am__EXEEXT_2 = pluq$(EXEEXT)
am__EXEEXT_3 = charpoly-LUK-ArithProg$(EXEEXT) \
	charpoly-Danilevskii-LUK$(EXEEXT) arithprog$(EXEEXT)
am__EXEEXT_4 = ftrtri$(EXEEXT)
am__EXEEXT_5 = fsytrf$(EXEEXT)
am__EXEEXT_6 = fsyrk$(EXEEXT)
am__EXEEXT_7 = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6)
am_arithprog_OBJECTS = arithprog.$(OBJEXT)
arithprog_OBJECTS = $(am_arithprog_OBJECTS)
arithprog_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_charpoly_Danilevskii_LUK_OBJECTS =  \
	charpoly_Danilevskii_LUK-charpoly.$(OBJEXT)
charpoly_Danilevskii_LUK_OBJECTS =  \
	$(am_charpoly_Danilevskii_LUK_OBJECTS)
charpoly_Danilevskii_LUK_LDADD = $(LDADD)
charpoly_Danilevskii_LUK_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(charpoly_Danilevskii_LUK_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_charpoly_LUK_ArithProg_OBJECTS =  \
	charpoly_LUK_ArithProg-charpoly.$(OBJEXT)
charpoly_LUK_ArithProg_OBJECTS = $(am_charpoly_LUK_ArithProg_OBJECTS)
charpoly_LUK_ArithProg_LDADD = $(LDADD)
charpoly_LUK_ArithProg_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(charpoly_LUK_ArithProg_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_fsyrk_OBJECTS = fsyrk.$(OBJEXT)
fsyrk_OBJECTS = $(am_fsyrk_OBJECTS)
fsyrk_LDADD = $(LDADD)
am_fsytrf_OBJECTS = fsytrf.$(OBJEXT)
fsytrf_OBJECTS = $(am_fsytrf_OBJECTS)
fsytrf_LDADD = $(LDADD)
am_ftrtri_OBJECTS = ftrtri.$(OBJEXT)
ftrtri_OBJECTS = $(am_ftrtri_OBJECTS)
ftrtri_LDADD = $(LDADD)
am_pluq_OBJECTS = pluq.$(OBJEXT)
pluq_OBJECTS = $(am_pluq_OBJECTS)
pluq_LDADD = $(LDADD)
am_winograd_modular_double_OBJECTS =  \
	winograd_modular_double-winograd.$(OBJEXT)
winograd_modular_double_OBJECTS =  \
	$(am_winograd_modular_double_OBJECTS)
winograd_modular_double_LDADD = $(LDADD)
winograd_modular_double_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(winograd_modular_double_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_winograd_modular_float_OBJECTS =  \
	winograd_modular_float-winograd.$(OBJEXT)
winograd_modular_float_OBJECTS = $(am_winograd_modular_float_OBJECTS)
winograd_modular_float_LDADD = $(LDADD)
winograd_modular_float_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(winograd_modular_float_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_winograd_modularbalanced_double_OBJECTS =  \
	winograd_modularbalanced_double-winograd.$(OBJEXT)
winograd_modularbalanced_double_OBJECTS =  \
	$(am_winograd_modularbalanced_double_OBJECTS)
winograd_modularbalanced_double_LDADD = $(LDADD)
winograd_modularbalanced_double_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(winograd_modularbalanced_double_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_winograd_modularbalanced_float_OBJECTS =  \
	winograd_modularbalanced_float-winograd.$(OBJEXT)
winograd_modularbalanced_float_OBJECTS =  \
	$(am_winograd_modularbalanced_float_OBJECTS)
winograd_modularbalanced_float_LDADD = $(LDADD)
winograd_modularbalanced_float_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(winograd_modularbalanced_float_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(arithprog_SOURCES) $(charpoly_Danilevskii_LUK_SOURCES) \
	$(charpoly_LUK_ArithProg_SOURCES) $(fsyrk_SOURCES) \
	$(fsytrf_SOURCES) $(ftrtri_SOURCES) $(pluq_SOURCES) \
	$(winograd_modular_double_SOURCES) \
	$(winograd_modular_float_SOURCES) \
	$(winograd_modularbalanced_double_SOURCES) \
	$(winograd_modularbalanced_float_SOURCES)
DIST_SOURCES = $(arithprog_SOURCES) \
	$(charpoly_Danilevskii_LUK_SOURCES) \
	$(charpoly_LUK_ArithProg_SOURCES) $(fsyrk_SOURCES) \
	$(fsytrf_SOURCES) $(ftrtri_SOURCES) $(pluq_SOURCES) \
	$(winograd_modular_double_SOURCES) \
	$(winograd_modular_float_SOURCES) \
	$(winograd_modularbalanced_double_SOURCES) \
	$(winograd_modularbalanced_float_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/build-aux/missing automake-1.15
AWK = gawk
BLAS_CFLAGS = 
BLAS_LIBS = /usr/lib/x86_64-linux-gnu/blas/libblas.so
BLAS_VENDOR = USER
CC = gcc
CCDEPMODE = depmode=gcc3
CCNAM = gcc
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -I/usr/local/include -fabi-version=6 -fopenmp -mavx -mavx2 -mfma -msse -msse2 -msse3 -msse4.1 -msse4.2 -mssse3
CYGPATH_W = echo
DEFAULT_CFLAGS = -O2  -Wall -g
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FFLASFFPACK_DOC_PATH = NONE/docs
FGREP = /bin/grep -F
GIVARO_CFLAGS = -fabi-version=6 -I/usr/local/include
GIVARO_LIBS = -L/usr/local/lib -lgivaro -lgmp -lgmpxx
GREP = /bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LAPACK_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS =  /usr/lib/x86_64-linux-gnu/blas/libblas.so
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OMPFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
PACKAGE = fflas-ffpack
PACKAGE_BUGREPORT = ffpack-devel@googlegroups.com
PACKAGE_NAME = FFLAS-FFPACK
PACKAGE_STRING = FFLAS-FFPACK 2.3.2
PACKAGE_TARNAME = fflas-ffpack
PACKAGE_URL = https://github.com/linbox-team/fflas-ffpack
PACKAGE_VERSION = 2.3.2
PARFLAGS = -fopenmp
PARLIBS = -fopenmp
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PRECOMPILE_FLAGS = 
PRECOMPILE_LIBS = 
PROF = no
RANLIB = ranlib
REQUIRED_FLAGS =  -fabi-version=6
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SIMD_FLAGS = 
STRIP = strip
USE_DEBUG = no
USE_MKL = false
VERSION = 2.3.2
WARN = no
abs_builddir = /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/autotune
abs_srcdir = /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/autotune
abs_top_builddir = /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2
abs_top_srcdir = /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/kashbari/git_repo/LinBoxPython/fflas-ffpack-2.3.2/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CXXFLAGS = -O2  -Wall -g -I$(top_srcdir) $(PRECOMPILE_FLAGS)
AM_LDFLAGS = $(CBLAS_LIBS) $(GIVARO_LIBS) $(CUDA_LIBS) $(PARLIBS)
#AM_LDFLAGS = $(CBLAS_LIBS) $(GIVARO_LIBS) $(CUDA_LIBS) $(PARLIBS) \
#	$(top_builddir)/fflas-ffpack/interfaces/libs/libfflas.la \
#	$(top_builddir)/fflas-ffpack/interfaces/libs/libffpack.la

AUTOTUNE_FGEMM = winograd-modular-float winograd-modular-double winograd-modularbalanced-float winograd-modularbalanced-double
AUTOTUNE_PLUQ = pluq
AUTOTUNE_CHARPOLY = charpoly-LUK-ArithProg charpoly-Danilevskii-LUK arithprog
AUTOTUNE_FTRTRI = ftrtri
AUTOTUNE_FSYTRF = fsytrf
AUTOTUNE_FSYRK = fsyrk
AUTOTUNE = $(AUTOTUNE_FGEMM) $(AUTOTUNE_PLUQ) $(AUTOTUNE_CHARPOLY) $(AUTOTUNE_FTRTRI) $(AUTOTUNE_FSYTRF) $(AUTOTUNE_FSYRK)
EXTRA_DIST = tune_fgemm.sh tune_pluq.sh tune_charpoly.sh tune_ftrtri.sh tune_fsytrf.sh tune_fsyrk.sh
pluq_SOURCES = pluq.C
ftrtri_SOURCES = ftrtri.C
fsytrf_SOURCES = fsytrf.C
fsyrk_SOURCES = fsyrk.C
charpoly_Danilevskii_LUK_SOURCES = charpoly.C
charpoly_Danilevskii_LUK_CXXFLAGS = $(AM_CXXFLAGS) -DVARIANT1="FfpackDanilevski" -DVARIANT2="FfpackLUK" -DNSTART=32 -DNFIRSTSTEP=32 -DNMAX=1000 -DNPREC=1 -DITER=500
charpoly_LUK_ArithProg_SOURCES = charpoly.C
charpoly_LUK_ArithProg_CXXFLAGS = $(AM_CXXFLAGS) -DVARIANT1="FfpackLUK" -DVARIANT2="FfpackArithProg" -DNSTART=1024 -DNFIRSTSTEP=128 -DNMAX=3000 -DNPREC=8 -DITER=1
arithprog_SOURCES = arithprog.C
#arithprog_CXXFLAGS=$(#AM_CXXFLAGS)
winograd_modular_float_SOURCES = winograd.C
winograd_modular_float_CXXFLAGS = $(AM_CXXFLAGS) -DFIELD="Givaro::Modular<float>"
winograd_modular_double_SOURCES = winograd.C
winograd_modular_double_CXXFLAGS = $(AM_CXXFLAGS) -DFIELD="Givaro::Modular<double>"
winograd_modularbalanced_float_SOURCES = winograd.C
winograd_modularbalanced_float_CXXFLAGS = $(AM_CXXFLAGS) -DFIELD="Givaro::ModularBalanced<float>"
winograd_modularbalanced_double_SOURCES = winograd.C
winograd_modularbalanced_double_CXXFLAGS = $(AM_CXXFLAGS) -DFIELD="Givaro::ModularBalanced<double>"
CLEANFILES = $(AUTOTUNE)
all: all-am

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign autotune/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign autotune/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

arithprog$(EXEEXT): $(arithprog_OBJECTS) $(arithprog_DEPENDENCIES) $(EXTRA_arithprog_DEPENDENCIES) 
	@rm -f arithprog$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(arithprog_OBJECTS) $(arithprog_LDADD) $(LIBS)

charpoly-Danilevskii-LUK$(EXEEXT): $(charpoly_Danilevskii_LUK_OBJECTS) $(charpoly_Danilevskii_LUK_DEPENDENCIES) $(EXTRA_charpoly_Danilevskii_LUK_DEPENDENCIES) 
	@rm -f charpoly-Danilevskii-LUK$(EXEEXT)
	$(AM_V_CXXLD)$(charpoly_Danilevskii_LUK_LINK) $(charpoly_Danilevskii_LUK_OBJECTS) $(charpoly_Danilevskii_LUK_LDADD) $(LIBS)

charpoly-LUK-ArithProg$(EXEEXT): $(charpoly_LUK_ArithProg_OBJECTS) $(charpoly_LUK_ArithProg_DEPENDENCIES) $(EXTRA_charpoly_LUK_ArithProg_DEPENDENCIES) 
	@rm -f charpoly-LUK-ArithProg$(EXEEXT)
	$(AM_V_CXXLD)$(charpoly_LUK_ArithProg_LINK) $(charpoly_LUK_ArithProg_OBJECTS) $(charpoly_LUK_ArithProg_LDADD) $(LIBS)

fsyrk$(EXEEXT): $(fsyrk_OBJECTS) $(fsyrk_DEPENDENCIES) $(EXTRA_fsyrk_DEPENDENCIES) 
	@rm -f fsyrk$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fsyrk_OBJECTS) $(fsyrk_LDADD) $(LIBS)

fsytrf$(EXEEXT): $(fsytrf_OBJECTS) $(fsytrf_DEPENDENCIES) $(EXTRA_fsytrf_DEPENDENCIES) 
	@rm -f fsytrf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fsytrf_OBJECTS) $(fsytrf_LDADD) $(LIBS)

ftrtri$(EXEEXT): $(ftrtri_OBJECTS) $(ftrtri_DEPENDENCIES) $(EXTRA_ftrtri_DEPENDENCIES) 
	@rm -f ftrtri$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ftrtri_OBJECTS) $(ftrtri_LDADD) $(LIBS)

pluq$(EXEEXT): $(pluq_OBJECTS) $(pluq_DEPENDENCIES) $(EXTRA_pluq_DEPENDENCIES) 
	@rm -f pluq$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pluq_OBJECTS) $(pluq_LDADD) $(LIBS)

winograd-modular-double$(EXEEXT): $(winograd_modular_double_OBJECTS) $(winograd_modular_double_DEPENDENCIES) $(EXTRA_winograd_modular_double_DEPENDENCIES) 
	@rm -f winograd-modular-double$(EXEEXT)
	$(AM_V_CXXLD)$(winograd_modular_double_LINK) $(winograd_modular_double_OBJECTS) $(winograd_modular_double_LDADD) $(LIBS)

winograd-modular-float$(EXEEXT): $(winograd_modular_float_OBJECTS) $(winograd_modular_float_DEPENDENCIES) $(EXTRA_winograd_modular_float_DEPENDENCIES) 
	@rm -f winograd-modular-float$(EXEEXT)
	$(AM_V_CXXLD)$(winograd_modular_float_LINK) $(winograd_modular_float_OBJECTS) $(winograd_modular_float_LDADD) $(LIBS)

winograd-modularbalanced-double$(EXEEXT): $(winograd_modularbalanced_double_OBJECTS) $(winograd_modularbalanced_double_DEPENDENCIES) $(EXTRA_winograd_modularbalanced_double_DEPENDENCIES) 
	@rm -f winograd-modularbalanced-double$(EXEEXT)
	$(AM_V_CXXLD)$(winograd_modularbalanced_double_LINK) $(winograd_modularbalanced_double_OBJECTS) $(winograd_modularbalanced_double_LDADD) $(LIBS)

winograd-modularbalanced-float$(EXEEXT): $(winograd_modularbalanced_float_OBJECTS) $(winograd_modularbalanced_float_DEPENDENCIES) $(EXTRA_winograd_modularbalanced_float_DEPENDENCIES) 
	@rm -f winograd-modularbalanced-float$(EXEEXT)
	$(AM_V_CXXLD)$(winograd_modularbalanced_float_LINK) $(winograd_modularbalanced_float_OBJECTS) $(winograd_modularbalanced_float_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/arithprog.Po
include ./$(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Po
include ./$(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Po
include ./$(DEPDIR)/fsyrk.Po
include ./$(DEPDIR)/fsytrf.Po
include ./$(DEPDIR)/ftrtri.Po
include ./$(DEPDIR)/pluq.Po
include ./$(DEPDIR)/winograd_modular_double-winograd.Po
include ./$(DEPDIR)/winograd_modular_float-winograd.Po
include ./$(DEPDIR)/winograd_modularbalanced_double-winograd.Po
include ./$(DEPDIR)/winograd_modularbalanced_float-winograd.Po

.C.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

charpoly_Danilevskii_LUK-charpoly.o: charpoly.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_Danilevskii_LUK_CXXFLAGS) $(CXXFLAGS) -MT charpoly_Danilevskii_LUK-charpoly.o -MD -MP -MF $(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Tpo -c -o charpoly_Danilevskii_LUK-charpoly.o `test -f 'charpoly.C' || echo '$(srcdir)/'`charpoly.C
	$(AM_V_at)$(am__mv) $(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Tpo $(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Po
#	$(AM_V_CXX)source='charpoly.C' object='charpoly_Danilevskii_LUK-charpoly.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_Danilevskii_LUK_CXXFLAGS) $(CXXFLAGS) -c -o charpoly_Danilevskii_LUK-charpoly.o `test -f 'charpoly.C' || echo '$(srcdir)/'`charpoly.C

charpoly_Danilevskii_LUK-charpoly.obj: charpoly.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_Danilevskii_LUK_CXXFLAGS) $(CXXFLAGS) -MT charpoly_Danilevskii_LUK-charpoly.obj -MD -MP -MF $(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Tpo -c -o charpoly_Danilevskii_LUK-charpoly.obj `if test -f 'charpoly.C'; then $(CYGPATH_W) 'charpoly.C'; else $(CYGPATH_W) '$(srcdir)/charpoly.C'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Tpo $(DEPDIR)/charpoly_Danilevskii_LUK-charpoly.Po
#	$(AM_V_CXX)source='charpoly.C' object='charpoly_Danilevskii_LUK-charpoly.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_Danilevskii_LUK_CXXFLAGS) $(CXXFLAGS) -c -o charpoly_Danilevskii_LUK-charpoly.obj `if test -f 'charpoly.C'; then $(CYGPATH_W) 'charpoly.C'; else $(CYGPATH_W) '$(srcdir)/charpoly.C'; fi`

charpoly_LUK_ArithProg-charpoly.o: charpoly.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_LUK_ArithProg_CXXFLAGS) $(CXXFLAGS) -MT charpoly_LUK_ArithProg-charpoly.o -MD -MP -MF $(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Tpo -c -o charpoly_LUK_ArithProg-charpoly.o `test -f 'charpoly.C' || echo '$(srcdir)/'`charpoly.C
	$(AM_V_at)$(am__mv) $(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Tpo $(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Po
#	$(AM_V_CXX)source='charpoly.C' object='charpoly_LUK_ArithProg-charpoly.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_LUK_ArithProg_CXXFLAGS) $(CXXFLAGS) -c -o charpoly_LUK_ArithProg-charpoly.o `test -f 'charpoly.C' || echo '$(srcdir)/'`charpoly.C

charpoly_LUK_ArithProg-charpoly.obj: charpoly.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_LUK_ArithProg_CXXFLAGS) $(CXXFLAGS) -MT charpoly_LUK_ArithProg-charpoly.obj -MD -MP -MF $(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Tpo -c -o charpoly_LUK_ArithProg-charpoly.obj `if test -f 'charpoly.C'; then $(CYGPATH_W) 'charpoly.C'; else $(CYGPATH_W) '$(srcdir)/charpoly.C'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Tpo $(DEPDIR)/charpoly_LUK_ArithProg-charpoly.Po
#	$(AM_V_CXX)source='charpoly.C' object='charpoly_LUK_ArithProg-charpoly.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(charpoly_LUK_ArithProg_CXXFLAGS) $(CXXFLAGS) -c -o charpoly_LUK_ArithProg-charpoly.obj `if test -f 'charpoly.C'; then $(CYGPATH_W) 'charpoly.C'; else $(CYGPATH_W) '$(srcdir)/charpoly.C'; fi`

winograd_modular_double-winograd.o: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_double_CXXFLAGS) $(CXXFLAGS) -MT winograd_modular_double-winograd.o -MD -MP -MF $(DEPDIR)/winograd_modular_double-winograd.Tpo -c -o winograd_modular_double-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modular_double-winograd.Tpo $(DEPDIR)/winograd_modular_double-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modular_double-winograd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_double_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modular_double-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C

winograd_modular_double-winograd.obj: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_double_CXXFLAGS) $(CXXFLAGS) -MT winograd_modular_double-winograd.obj -MD -MP -MF $(DEPDIR)/winograd_modular_double-winograd.Tpo -c -o winograd_modular_double-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modular_double-winograd.Tpo $(DEPDIR)/winograd_modular_double-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modular_double-winograd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_double_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modular_double-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`

winograd_modular_float-winograd.o: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_float_CXXFLAGS) $(CXXFLAGS) -MT winograd_modular_float-winograd.o -MD -MP -MF $(DEPDIR)/winograd_modular_float-winograd.Tpo -c -o winograd_modular_float-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modular_float-winograd.Tpo $(DEPDIR)/winograd_modular_float-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modular_float-winograd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_float_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modular_float-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C

winograd_modular_float-winograd.obj: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_float_CXXFLAGS) $(CXXFLAGS) -MT winograd_modular_float-winograd.obj -MD -MP -MF $(DEPDIR)/winograd_modular_float-winograd.Tpo -c -o winograd_modular_float-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modular_float-winograd.Tpo $(DEPDIR)/winograd_modular_float-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modular_float-winograd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modular_float_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modular_float-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`

winograd_modularbalanced_double-winograd.o: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_double_CXXFLAGS) $(CXXFLAGS) -MT winograd_modularbalanced_double-winograd.o -MD -MP -MF $(DEPDIR)/winograd_modularbalanced_double-winograd.Tpo -c -o winograd_modularbalanced_double-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modularbalanced_double-winograd.Tpo $(DEPDIR)/winograd_modularbalanced_double-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modularbalanced_double-winograd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_double_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modularbalanced_double-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C

winograd_modularbalanced_double-winograd.obj: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_double_CXXFLAGS) $(CXXFLAGS) -MT winograd_modularbalanced_double-winograd.obj -MD -MP -MF $(DEPDIR)/winograd_modularbalanced_double-winograd.Tpo -c -o winograd_modularbalanced_double-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modularbalanced_double-winograd.Tpo $(DEPDIR)/winograd_modularbalanced_double-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modularbalanced_double-winograd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_double_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modularbalanced_double-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`

winograd_modularbalanced_float-winograd.o: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_float_CXXFLAGS) $(CXXFLAGS) -MT winograd_modularbalanced_float-winograd.o -MD -MP -MF $(DEPDIR)/winograd_modularbalanced_float-winograd.Tpo -c -o winograd_modularbalanced_float-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modularbalanced_float-winograd.Tpo $(DEPDIR)/winograd_modularbalanced_float-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modularbalanced_float-winograd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_float_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modularbalanced_float-winograd.o `test -f 'winograd.C' || echo '$(srcdir)/'`winograd.C

winograd_modularbalanced_float-winograd.obj: winograd.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_float_CXXFLAGS) $(CXXFLAGS) -MT winograd_modularbalanced_float-winograd.obj -MD -MP -MF $(DEPDIR)/winograd_modularbalanced_float-winograd.Tpo -c -o winograd_modularbalanced_float-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/winograd_modularbalanced_float-winograd.Tpo $(DEPDIR)/winograd_modularbalanced_float-winograd.Po
#	$(AM_V_CXX)source='winograd.C' object='winograd_modularbalanced_float-winograd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(winograd_modularbalanced_float_CXXFLAGS) $(CXXFLAGS) -c -o winograd_modularbalanced_float-winograd.obj `if test -f 'winograd.C'; then $(CYGPATH_W) 'winograd.C'; else $(CYGPATH_W) '$(srcdir)/winograd.C'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


define run_tune_fgemm
	${top_srcdir}/autotune/tune_fgemm.sh
endef	
define run_tune_pluq
	${top_srcdir}/autotune/tune_pluq.sh
endef	
define run_tune_charpoly
	${top_srcdir}/autotune/tune_charpoly.sh
endef
define run_tune_ftrtri
	${top_srcdir}/autotune/tune_ftrtri.sh
endef
define run_tune_fsytrf
	${top_srcdir}/autotune/tune_fsytrf.sh
endef
define run_tune_fsyrk
	${top_srcdir}/autotune/tune_fsyrk.sh
endef
define merge_thresholds
	cat fgemm-thresholds.h pluq-threshold.h charpoly-LUK-ArithProg-threshold.h charpoly-Danilevskii-LUK-threshold.h arithprog-blocksize.h ftrtri-threshold.h fsytrf-threshold.h fsyrk-threshold.h> ${top_srcdir}/fflas-ffpack/fflas-ffpack-thresholds.h
endef	

# This forces the autotune runs to be sequential
autotune: autotune_fgemm autotune_pluq autotune_charpoly autotune_ftrtri autotune_fsytrf autotune_fsyrk
	${run_tune_fgemm}
	${run_tune_pluq}
	${run_tune_charpoly}
	${run_tune_ftrtri}
	${run_tune_fsyrk}
	${run_tune_fsytrf}
	${merge_thresholds}

# Tune fgemm only
tune_fgemm: autotune_fgemm
	${run_tune_fgemm}
	${merge_thresholds}

# Tune pluq only
tune_pluq: autotune_pluq
	${run_tune_pluq}
	${merge_thresholds}

# Tune ftrtri only
tune_ftrtri: autotune_ftrtri
	${run_tune_ftrtri}
	${merge_thresholds}

# Tune fsytrf only
tune_fsytrf: autotune_fsytrf
	${run_tune_fsytrf}
	${merge_thresholds}

# Tune fsyrk only
tune_fsyrk: autotune_fsyrk
	${run_tune_fsyrk}
	${merge_thresholds}

# Tune charpoly only
tune_charpoly: autotune_charpoly
	${run_tune_charpoly}
	${merge_thresholds}

autotune_fgemm: $(AUTOTUNE_FGEMM:%=%$(EXEEXT))

autotune_pluq: $(AUTOTUNE_PLUQ:%=%$(EXEEXT))

autotune_ftrtri: $(AUTOTUNE_FTRTRI:%=%$(EXEEXT))

autotune_fsytrf: $(AUTOTUNE_FSYTRF:%=%$(EXEEXT))

autotune_fsyrk: $(AUTOTUNE_FSYRK:%=%$(EXEEXT))

autotune_charpoly: $(AUTOTUNE_CHARPOLY:%=%$(EXEEXT))

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
